{
	"version": 3,
	"file": "main.css",
	"sources": [
		"main.scss",
		"_scss/_config.scss",
		"_scss/bourbon/_bourbon.scss",
		"_scss/bourbon/settings/_prefixer.scss",
		"_scss/bourbon/settings/_px-to-em.scss",
		"_scss/bourbon/settings/_asset-pipeline.scss",
		"_scss/bourbon/functions/_assign-inputs.scss",
		"_scss/bourbon/functions/_contains.scss",
		"_scss/bourbon/functions/_contains-falsy.scss",
		"_scss/bourbon/functions/_is-length.scss",
		"_scss/bourbon/functions/_is-light.scss",
		"_scss/bourbon/functions/_is-number.scss",
		"_scss/bourbon/functions/_is-size.scss",
		"_scss/bourbon/functions/_px-to-em.scss",
		"_scss/bourbon/functions/_px-to-rem.scss",
		"_scss/bourbon/functions/_shade.scss",
		"_scss/bourbon/functions/_strip-units.scss",
		"_scss/bourbon/functions/_tint.scss",
		"_scss/bourbon/functions/_transition-property-name.scss",
		"_scss/bourbon/functions/_unpack.scss",
		"_scss/bourbon/functions/_modular-scale.scss",
		"_scss/bourbon/helpers/_convert-units.scss",
		"_scss/bourbon/helpers/_directional-values.scss",
		"_scss/bourbon/helpers/_font-source-declaration.scss",
		"_scss/bourbon/helpers/_gradient-positions-parser.scss",
		"_scss/bourbon/helpers/_linear-angle-parser.scss",
		"_scss/bourbon/helpers/_linear-gradient-parser.scss",
		"_scss/bourbon/helpers/_linear-positions-parser.scss",
		"_scss/bourbon/helpers/_linear-side-corner-parser.scss",
		"_scss/bourbon/helpers/_radial-arg-parser.scss",
		"_scss/bourbon/helpers/_radial-positions-parser.scss",
		"_scss/bourbon/helpers/_radial-gradient-parser.scss",
		"_scss/bourbon/helpers/_render-gradients.scss",
		"_scss/bourbon/helpers/_shape-size-stripper.scss",
		"_scss/bourbon/helpers/_str-to-num.scss",
		"_scss/bourbon/css3/_animation.scss",
		"_scss/bourbon/css3/_appearance.scss",
		"_scss/bourbon/css3/_backface-visibility.scss",
		"_scss/bourbon/css3/_background.scss",
		"_scss/bourbon/css3/_background-image.scss",
		"_scss/bourbon/css3/_border-image.scss",
		"_scss/bourbon/css3/_calc.scss",
		"_scss/bourbon/css3/_columns.scss",
		"_scss/bourbon/css3/_filter.scss",
		"_scss/bourbon/css3/_flex-box.scss",
		"_scss/bourbon/css3/_font-face.scss",
		"_scss/bourbon/css3/_font-feature-settings.scss",
		"_scss/bourbon/css3/_hidpi-media-query.scss",
		"_scss/bourbon/css3/_hyphens.scss",
		"_scss/bourbon/css3/_image-rendering.scss",
		"_scss/bourbon/css3/_keyframes.scss",
		"_scss/bourbon/css3/_linear-gradient.scss",
		"_scss/bourbon/css3/_perspective.scss",
		"_scss/bourbon/css3/_placeholder.scss",
		"_scss/bourbon/css3/_radial-gradient.scss",
		"_scss/bourbon/css3/_selection.scss",
		"_scss/bourbon/css3/_text-decoration.scss",
		"_scss/bourbon/css3/_transform.scss",
		"_scss/bourbon/css3/_transition.scss",
		"_scss/bourbon/css3/_user-select.scss",
		"_scss/bourbon/addons/_border-color.scss",
		"_scss/bourbon/addons/_border-radius.scss",
		"_scss/bourbon/addons/_border-style.scss",
		"_scss/bourbon/addons/_border-width.scss",
		"_scss/bourbon/addons/_buttons.scss",
		"_scss/bourbon/addons/_clearfix.scss",
		"_scss/bourbon/addons/_ellipsis.scss",
		"_scss/bourbon/addons/_font-stacks.scss",
		"_scss/bourbon/addons/_hide-text.scss",
		"_scss/bourbon/addons/_margin.scss",
		"_scss/bourbon/addons/_padding.scss",
		"_scss/bourbon/addons/_position.scss",
		"_scss/bourbon/addons/_prefixer.scss",
		"_scss/bourbon/addons/_retina-image.scss",
		"_scss/bourbon/addons/_size.scss",
		"_scss/bourbon/addons/_text-inputs.scss",
		"_scss/bourbon/addons/_timing-functions.scss",
		"_scss/bourbon/addons/_triangle.scss",
		"_scss/bourbon/addons/_word-wrap.scss",
		"_scss/bourbon/_bourbon-deprecated-upcoming.scss",
		"_scss/base/_poole.scss",
		"_scss/base/_layout.scss",
		"_scss/base/_global.scss",
		"_scss/base/_syntax.scss",
		"_scss/component/_sidebar.scss",
		"_scss/component/_hero.scss",
		"_scss/component/_post.scss",
		"_scss/component/_page.scss",
		"_scss/component/_tag.scss",
		"_scss/component/_masthead.scss",
		"_scss/component/_pagination.scss"
	],
	"sourcesContent": [
		"@import 'config';\n\n@import 'bourbon/bourbon';\n\n@import 'base/poole';\n@import 'base/layout';\n@import 'base/global';\n@import 'base/syntax';\n\n@import 'component/sidebar';\n@import 'component/hero';\n@import 'component/post';\n@import 'component/page';\n@import 'component/tag';\n@import 'component/masthead';\n@import 'component/pagination';\n\n.toc-side{\ntop: 7.0rem; \nposition: absolute;\nleft:0.5rem;\nmax-width:16rem;\n}\n@media (max-width: 84em) {\n .toc-side {\n  position:inherit;\n }\n}\n.navi-link{\n    cursor: pointer;\n    text-decoration: none;\n}\n.navi-link::before{\n    content: \">\";\n}\n.navi-link-container{\n    font-size: 0.75em;\n}\n.item-link{\n    cursor: pointer;\n    text-decoration: none;\n}",
		"/* Colors \r\n * Based on colors from Base16: http://chriskempson.github.io/base16/#default.\r\n */\r\n$red:      #ac4142;\r\n$orange:   #d28445;\r\n$yellow:   #f4bf75;\r\n$green:    #90a959;\r\n$cyan:     #75b5aa;\r\n$blue:     #6a9fb5;\r\n$magenta:  #aa759f;\r\n$brown:    #8f5536;\r\n$default:  #505050;\r\n\r\n$white:      #fff;\r\n$lightgrey:  #eee;\r\n$black:      #000;\r\n\r\n$theme-color: $blue;\r\n$theme-color-dark: darken($theme-color, 10%);\r\n\r\n$post-date-color: #9a9a9a;\r\n$title-color: #313131;\r\n$masthead-title-small-color: #c0c0c0;\r\n\r\n/* Layout */\r\n$reverse-layout: true;\r\n$overlay-sidebar: false;\r\n\r\n/* Font stack */\r\n$font-serif: \"PT Serif\", Georgia, \"Times New Roman\", serif;\r\n$font-sans: \"PT Sans\", Helvetica, Arial, sans-serif;\r\n$font-font-awesome: FontAwesome;\r\n",
		"// Bourbon 4.2.7\r\n// http://bourbon.io\r\n// Copyright 2011-2015 thoughtbot, inc.\r\n// MIT License\r\n\r\n@import \"settings/prefixer\";\r\n@import \"settings/px-to-em\";\r\n@import \"settings/asset-pipeline\";\r\n\r\n@import \"functions/assign-inputs\";\r\n@import \"functions/contains\";\r\n@import \"functions/contains-falsy\";\r\n@import \"functions/is-length\";\r\n@import \"functions/is-light\";\r\n@import \"functions/is-number\";\r\n@import \"functions/is-size\";\r\n@import \"functions/px-to-em\";\r\n@import \"functions/px-to-rem\";\r\n@import \"functions/shade\";\r\n@import \"functions/strip-units\";\r\n@import \"functions/tint\";\r\n@import \"functions/transition-property-name\";\r\n@import \"functions/unpack\";\r\n@import \"functions/modular-scale\";\r\n\r\n@import \"helpers/convert-units\";\r\n@import \"helpers/directional-values\";\r\n@import \"helpers/font-source-declaration\";\r\n@import \"helpers/gradient-positions-parser\";\r\n@import \"helpers/linear-angle-parser\";\r\n@import \"helpers/linear-gradient-parser\";\r\n@import \"helpers/linear-positions-parser\";\r\n@import \"helpers/linear-side-corner-parser\";\r\n@import \"helpers/radial-arg-parser\";\r\n@import \"helpers/radial-positions-parser\";\r\n@import \"helpers/radial-gradient-parser\";\r\n@import \"helpers/render-gradients\";\r\n@import \"helpers/shape-size-stripper\";\r\n@import \"helpers/str-to-num\";\r\n\r\n@import \"css3/animation\";\r\n@import \"css3/appearance\";\r\n@import \"css3/backface-visibility\";\r\n@import \"css3/background\";\r\n@import \"css3/background-image\";\r\n@import \"css3/border-image\";\r\n@import \"css3/calc\";\r\n@import \"css3/columns\";\r\n@import \"css3/filter\";\r\n@import \"css3/flex-box\";\r\n@import \"css3/font-face\";\r\n@import \"css3/font-feature-settings\";\r\n@import \"css3/hidpi-media-query\";\r\n@import \"css3/hyphens\";\r\n@import \"css3/image-rendering\";\r\n@import \"css3/keyframes\";\r\n@import \"css3/linear-gradient\";\r\n@import \"css3/perspective\";\r\n@import \"css3/placeholder\";\r\n@import \"css3/radial-gradient\";\r\n@import \"css3/selection\";\r\n@import \"css3/text-decoration\";\r\n@import \"css3/transform\";\r\n@import \"css3/transition\";\r\n@import \"css3/user-select\";\r\n\r\n@import \"addons/border-color\";\r\n@import \"addons/border-radius\";\r\n@import \"addons/border-style\";\r\n@import \"addons/border-width\";\r\n@import \"addons/buttons\";\r\n@import \"addons/clearfix\";\r\n@import \"addons/ellipsis\";\r\n@import \"addons/font-stacks\";\r\n@import \"addons/hide-text\";\r\n@import \"addons/margin\";\r\n@import \"addons/padding\";\r\n@import \"addons/position\";\r\n@import \"addons/prefixer\";\r\n@import \"addons/retina-image\";\r\n@import \"addons/size\";\r\n@import \"addons/text-inputs\";\r\n@import \"addons/timing-functions\";\r\n@import \"addons/triangle\";\r\n@import \"addons/word-wrap\";\r\n\r\n@import \"bourbon-deprecated-upcoming\";\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Global variables to enable or disable vendor prefixes\r\n\r\n$prefix-for-webkit:    true !default;\r\n$prefix-for-mozilla:   true !default;\r\n$prefix-for-microsoft: true !default;\r\n$prefix-for-opera:     true !default;\r\n$prefix-for-spec:      true !default;\r\n",
		"$em-base: 16px !default;\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\r\n///\r\n/// @type Bool\r\n\r\n$asset-pipeline: false !default;\r\n",
		"@function assign-inputs($inputs, $pseudo: null) {\r\n  $list: ();\r\n\r\n  @each $input in $inputs {\r\n    $input: unquote($input);\r\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\r\n    $list: append($list, $input, comma);\r\n  }\r\n\r\n  @return $list;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks if a list contains a value(s).\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list\r\n///   The list to check against.\r\n///\r\n/// @param {List} $values\r\n///   A single value or list of values to check for.\r\n///\r\n/// @example scss - Usage\r\n///   contains($list, $value)\r\n///\r\n/// @return {Bool}\r\n\r\n@function contains($list, $values...) {\r\n  @each $value in $values {\r\n    @if type-of(index($list, $value)) != \"number\" {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks if a list does not contains a value.\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list\r\n///   The list to check against.\r\n///\r\n/// @return {Bool}\r\n\r\n@function contains-falsy($list) {\r\n  @each $item in $list {\r\n    @if not $item {\r\n      @return true;\r\n    }\r\n  }\r\n\r\n  @return false;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid CSS length.\r\n///\r\n/// @param {String} $value\r\n\r\n@function is-length($value) {\r\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\r\n       or index(auto inherit initial 0, $value)\r\n       or (type-of($value) == \"number\" and not(unitless($value))));\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Programatically determines whether a color is light or dark.\r\n///\r\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\r\n///\r\n/// @param {Color (Hex)} $color\r\n///\r\n/// @example scss - Usage\r\n///   is-light($color)\r\n///\r\n/// @return {Bool}\r\n\r\n@function is-light($hex-color) {\r\n  $-local-red: red(rgba($hex-color, 1));\r\n  $-local-green: green(rgba($hex-color, 1));\r\n  $-local-blue: blue(rgba($hex-color, 1));\r\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\r\n\r\n  @return $-local-lightness > 0.6;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid number.\r\n///\r\n/// @param {Number} $value\r\n///\r\n/// @require {function} contains\r\n\r\n@function is-number($value) {\r\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid CSS size.\r\n///\r\n/// @param {String} $value\r\n///\r\n/// @require {function} contains\r\n/// @require {function} is-length\r\n\r\n@function is-size($value) {\r\n  @return is-length($value)\r\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\r\n}\r\n",
		"// Convert pixels to ems\r\n// eg. for a relational value of 12px write em(12) when the parent is 16px\r\n// if the parent is another value say 24px write em(12, 24)\r\n\r\n@function em($pxval, $base: $em-base) {\r\n  @if not unitless($pxval) {\r\n    $pxval: strip-units($pxval);\r\n  }\r\n  @if not unitless($base) {\r\n    $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1em;\r\n}\r\n",
		"// Convert pixels to rems\r\n// eg. for a relational value of 12px write rem(12)\r\n// Assumes $em-base is the font-size of <html>\r\n\r\n@function rem($pxval) {\r\n  @if not unitless($pxval) {\r\n    $pxval: strip-units($pxval);\r\n  }\r\n\r\n  $base: $em-base;\r\n  @if not unitless($base) {\r\n    $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1rem;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Mixes a color with black.\r\n///\r\n/// @param {Color} $color\r\n///\r\n/// @param {Number (Percentage)} $percent\r\n///   The amount of black to be mixed in.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     background-color: shade(#ffbb52, 60%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     background-color: #664a20;\r\n///   }\r\n///\r\n/// @return {Color}\r\n\r\n@function shade($color, $percent) {\r\n  @return mix(#000, $color, $percent);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Strips the unit from a number.\r\n///\r\n/// @param {Number (With Unit)} $value\r\n///\r\n/// @example scss - Usage\r\n///   $dimension: strip-units(10em);\r\n///\r\n/// @example css - CSS Output\r\n///   $dimension: 10;\r\n///\r\n/// @return {Number (Unitless)}\r\n\r\n@function strip-units($value) {\r\n  @return ($value / ($value * 0 + 1));\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Mixes a color with white.\r\n///\r\n/// @param {Color} $color\r\n///\r\n/// @param {Number (Percentage)} $percent\r\n///   The amount of white to be mixed in.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     background-color: tint(#6ecaa6, 40%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     background-color: #a8dfc9;\r\n///   }\r\n///\r\n/// @return {Color}\r\n\r\n@function tint($color, $percent) {\r\n  @return mix(#fff, $color, $percent);\r\n}\r\n",
		"// Return vendor-prefixed property names if appropriate\r\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\r\n//************************************************************************//\r\n@function transition-property-names($props, $vendor: false) {\r\n  $new-props: ();\r\n\r\n  @each $prop in $props {\r\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\r\n  }\r\n\r\n  @return $new-props;\r\n}\r\n\r\n@function transition-property-name($prop, $vendor: false) {\r\n  // put other properties that need to be prefixed here aswell\r\n  @if $vendor and $prop == transform {\r\n    @return unquote('-'+$vendor+'-'+$prop);\r\n  }\r\n  @else {\r\n    @return $prop;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Converts shorthand to the 4-value syntax.\r\n///\r\n/// @param {List} $shorthand\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     margin: unpack(1em 2em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     margin: 1em 2em 1em 2em;\r\n///   }\r\n\r\n@function unpack($shorthand) {\r\n  @if length($shorthand) == 1 {\r\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\r\n  } @else if length($shorthand) == 2 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\r\n  } @else if length($shorthand) == 3 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\r\n  } @else {\r\n    @return $shorthand;\r\n  }\r\n}\r\n",
		"// Scaling Variables\r\n$golden:           1.618;\r\n$minor-second:     1.067;\r\n$major-second:     1.125;\r\n$minor-third:      1.2;\r\n$major-third:      1.25;\r\n$perfect-fourth:   1.333;\r\n$augmented-fourth: 1.414;\r\n$perfect-fifth:    1.5;\r\n$minor-sixth:      1.6;\r\n$major-sixth:      1.667;\r\n$minor-seventh:    1.778;\r\n$major-seventh:    1.875;\r\n$octave:           2;\r\n$major-tenth:      2.5;\r\n$major-eleventh:   2.667;\r\n$major-twelfth:    3;\r\n$double-octave:    4;\r\n\r\n$modular-scale-ratio: $perfect-fourth !default;\r\n$modular-scale-base: em($em-base) !default;\r\n\r\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\r\n  $v1: nth($value, 1);\r\n  $v2: nth($value, length($value));\r\n  $value: $v1;\r\n\r\n  // scale $v2 to just above $v1\r\n  @while $v2 > $v1 {\r\n    $v2: ($v2 / $ratio); // will be off-by-1\r\n  }\r\n  @while $v2 < $v1 {\r\n    $v2: ($v2 * $ratio); // will fix off-by-1\r\n  }\r\n\r\n  // check AFTER scaling $v2 to prevent double-counting corner-case\r\n  $double-stranded: $v2 > $v1;\r\n\r\n  @if $increment > 0 {\r\n    @for $i from 1 through $increment {\r\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 * $ratio);\r\n      } @else {\r\n        $v1: ($v1 * $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @if $increment < 0 {\r\n    // adjust $v2 to just below $v1\r\n    @if $double-stranded {\r\n      $v2: ($v2 / $ratio);\r\n    }\r\n\r\n    @for $i from $increment through -1 {\r\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 / $ratio);\r\n      } @else {\r\n        $v1: ($v1 / $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $value;\r\n}\r\n",
		"//************************************************************************//\r\n// Helper function for str-to-num fn.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _convert-units($number, $unit) {\r\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\r\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\r\n  $index: index($strings, $unit);\r\n\r\n  @if not $index {\r\n    @warn \"Unknown unit `#{$unit}`.\";\r\n    @return false;\r\n  }\r\n\r\n  @if type-of($number) != \"number\" {\r\n    @warn \"`#{$number} is not a number`\";\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Directional-property mixins are shorthands for writing properties like the following\r\n///\r\n/// @ignore You can also use `false` instead of `null`.\r\n///\r\n/// @param {List} $vals\r\n///   List of directional values\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-style(dotted null);\r\n///     @include margin(null 0 10px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-style: dotted;\r\n///     border-top-style: dotted;\r\n///     margin-bottom: 10px;\r\n///     margin-left: 0;\r\n///     margin-right: 0;\r\n///   }\r\n///\r\n/// @require {function} contains-falsy\r\n///\r\n/// @return {List}\r\n\r\n@function collapse-directionals($vals) {\r\n  $output: null;\r\n\r\n  $a: nth($vals, 1);\r\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\r\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\r\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\r\n\r\n  @if $a == 0 { $a: 0; }\r\n  @if $b == 0 { $b: 0; }\r\n  @if $c == 0 { $c: 0; }\r\n  @if $d == 0 { $d: 0; }\r\n\r\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\r\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\r\n  @else if $b == $d                      { $output: $a $b $c;    }\r\n  @else                                  { $output: $a $b $c $d; }\r\n\r\n  @return $output;\r\n}\r\n\r\n/// Output directional properties, for instance `margin`.\r\n///\r\n/// @access private\r\n///\r\n/// @param {String} $pre\r\n///   Prefix to use\r\n/// @param {String} $suf\r\n///   Suffix to use\r\n/// @param {List} $vals\r\n///   List of values\r\n///\r\n/// @require {function} collapse-directionals\r\n/// @require {function} contains-falsy\r\n\r\n@mixin directional-property($pre, $suf, $vals) {\r\n  // Property Names\r\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\r\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\r\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\r\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\r\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\r\n\r\n  $vals: collapse-directionals($vals);\r\n\r\n  @if contains-falsy($vals) {\r\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\r\n\r\n    @if length($vals) == 1 {\r\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\r\n    } @else {\r\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\r\n    }\r\n\r\n    @if length($vals) == 2 {\r\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 3 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 4 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\r\n    }\r\n  } @else {\r\n    #{$all}: $vals;\r\n  }\r\n}\r\n",
		"// Used for creating the source string for fonts using @font-face\r\n// Reference: http://goo.gl/Ru1bKP\r\n\r\n@function font-url-prefixer($asset-pipeline) {\r\n  @if $asset-pipeline == true {\r\n    @return font-url;\r\n  } @else {\r\n    @return url;\r\n  }\r\n}\r\n\r\n@function font-source-declaration(\r\n  $font-family,\r\n  $file-path,\r\n  $asset-pipeline,\r\n  $file-formats,\r\n  $font-url) {\r\n\r\n  $src: ();\r\n\r\n  $formats-map: (\r\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\r\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\r\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\r\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\r\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\r\n  );\r\n\r\n  @each $key, $values in $formats-map {\r\n    @if contains($file-formats, $key) {\r\n      $file-path: nth($values, 1);\r\n      $font-format: nth($values, 2);\r\n\r\n      @if $asset-pipeline == true {\r\n        $src: append($src, font-url($file-path) $font-format, comma);\r\n      } @else {\r\n        $src: append($src, url($file-path) $font-format, comma);\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $src;\r\n}\r\n",
		"@function _gradient-positions-parser($gradient-type, $gradient-positions) {\r\n  @if $gradient-positions\r\n  and ($gradient-type == linear)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _linear-positions-parser($gradient-positions);\r\n  }\r\n  @else if $gradient-positions\r\n  and ($gradient-type == radial)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _radial-positions-parser($gradient-positions);\r\n  }\r\n  @return $gradient-positions;\r\n}\r\n",
		"// Private function for linear-gradient-parser\r\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\r\n  $offset: null;\r\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\r\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\r\n\r\n  @if ($unit-long == \"grad\") or\r\n      ($unit-long == \"turn\") {\r\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\r\n  }\r\n\r\n  @else if ($unit-short == \"deg\") or\r\n           ($unit-short == \"rad\") {\r\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\r\n  }\r\n\r\n  @if $offset {\r\n    $num: _str-to-num($first-val);\r\n\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n}\r\n",
		"@function _linear-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 1, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $has-multiple-vals: str-index($first-val, \" \");\r\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\r\n  $has-angle: is-number(str-slice($first-val, 1, 1));\r\n\r\n  @if $has-multiple-vals {\r\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\r\n  }\r\n\r\n  @else if $has-single-position != \"\" {\r\n    $pos: unquote($has-single-position + \"\");\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n\r\n  @else if $has-angle {\r\n    // Rotate degree for webkit\r\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n",
		"@function _linear-positions-parser($pos) {\r\n  $type: type-of(nth($pos, 1));\r\n  $spec: null;\r\n  $degree: null;\r\n  $side: null;\r\n  $corner: null;\r\n  $length: length($pos);\r\n  // Parse Side and corner positions\r\n  @if ($length > 1) {\r\n    @if nth($pos, 1) == \"to\" { // Newer syntax\r\n      $side: nth($pos, 2);\r\n\r\n      @if $length == 2 { // eg. to top\r\n        // Swap for backwards compatibility\r\n        $degree: _position-flipper(nth($pos, 2));\r\n      }\r\n      @else if $length == 3 { // eg. to top left\r\n        $corner: nth($pos, 3);\r\n      }\r\n    }\r\n    @else if $length == 2 { // Older syntax (\"top left\")\r\n      $side: _position-flipper(nth($pos, 1));\r\n      $corner: _position-flipper(nth($pos, 2));\r\n    }\r\n\r\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    $spec: to $side $corner;\r\n  }\r\n  @else if $length == 1 {\r\n    // Swap for backwards compatibility\r\n    @if $type == string {\r\n      $degree: $pos;\r\n      $spec: to _position-flipper($pos);\r\n    }\r\n    @else {\r\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\r\n      $spec: $pos;\r\n    }\r\n  }\r\n  $degree: unquote($degree + \",\");\r\n  $spec:   unquote($spec + \",\");\r\n  @return $degree $spec;\r\n}\r\n\r\n@function _position-flipper($pos) {\r\n  @return if($pos == left, right, null)\r\n         if($pos == right, left, null)\r\n         if($pos == top, bottom, null)\r\n         if($pos == bottom, top, null);\r\n}\r\n",
		"// Private function for linear-gradient-parser\r\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\r\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\r\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\r\n  $val-3: null;\r\n  $has-val-3: str-index($val-2, \" \");\r\n\r\n  @if $has-val-3 {\r\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\r\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\r\n  }\r\n\r\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\r\n  $pos: unquote($pos + \"\");\r\n\r\n  // Use old spec for webkit\r\n  @if $val-1 == \"to\" {\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  // Bring the code up to spec\r\n  @else {\r\n    @return (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n}\r\n",
		"@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\r\n  @each $value in $g1, $g2 {\r\n    $first-val: nth($value, 1);\r\n    $pos-type:  type-of($first-val);\r\n    $spec-at-index: null;\r\n\r\n    // Determine if spec was passed to mixin\r\n    @if type-of($value) == list {\r\n      $spec-at-index: if(index($value, at), index($value, at), false);\r\n    }\r\n    @if $spec-at-index {\r\n      @if $spec-at-index > 1 {\r\n        @for $i from 1 through ($spec-at-index - 1) {\r\n          $shape-size: $shape-size nth($value, $i);\r\n        }\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      @else if $spec-at-index == 1 {\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      $g1: null;\r\n    }\r\n\r\n    // If not spec calculate correct values\r\n    @else {\r\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\r\n        @if ($pos-type == number)\r\n        or ($first-val == \"center\")\r\n        or ($first-val == \"top\")\r\n        or ($first-val == \"right\")\r\n        or ($first-val == \"bottom\")\r\n        or ($first-val == \"left\") {\r\n\r\n          $pos: $value;\r\n\r\n          @if $pos == $g1 {\r\n            $g1: null;\r\n          }\r\n        }\r\n\r\n        @else if\r\n           ($first-val == \"ellipse\")\r\n        or ($first-val == \"circle\")\r\n        or ($first-val == \"closest-side\")\r\n        or ($first-val == \"closest-corner\")\r\n        or ($first-val == \"farthest-side\")\r\n        or ($first-val == \"farthest-corner\")\r\n        or ($first-val == \"contain\")\r\n        or ($first-val == \"cover\") {\r\n\r\n          $shape-size: $value;\r\n\r\n          @if $value == $g1 {\r\n            $g1: null;\r\n          }\r\n\r\n          @else if $value == $g2 {\r\n            $g2: null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @return $g1, $g2, $pos, $shape-size;\r\n}\r\n",
		"@function _radial-positions-parser($gradient-pos) {\r\n  $shape-size: nth($gradient-pos, 1);\r\n  $pos:        nth($gradient-pos, 2);\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\r\n             unquote(if($shape-size, \"#{$shape-size},\", null));\r\n  $pos-spec: if($pos, \"at #{$pos}\", null);\r\n\r\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\r\n\r\n  // Add comma\r\n  @if ($spec != \"  \") {\r\n    $spec: \"#{$spec},\";\r\n  }\r\n\r\n  @return $pre-spec $spec;\r\n}\r\n",
		"@function _radial-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 1, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $is-spec-syntax: str-index($first-val, \"at\");\r\n\r\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\r\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n    $pos: append($pos, $keyword, comma);\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else if $is-spec-syntax == 1 {\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\r\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\r\n\r\n    $gradients: (\r\n      webkit-image: null,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n",
		"// User for linear and radial gradients within background-image or border-image properties\r\n\r\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\r\n  $pre-spec: null;\r\n  $spec: null;\r\n  $vendor-gradients: null;\r\n  @if $gradient-type == linear {\r\n    @if $gradient-positions {\r\n      $pre-spec: nth($gradient-positions, 1);\r\n      $spec:     nth($gradient-positions, 2);\r\n    }\r\n  }\r\n  @else if $gradient-type == radial {\r\n    $pre-spec: nth($gradient-positions, 1);\r\n    $spec:     nth($gradient-positions, 2);\r\n  }\r\n\r\n  @if $vendor {\r\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\r\n  }\r\n  @else if $vendor == false {\r\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\r\n    $vendor-gradients: unquote($vendor-gradients);\r\n  }\r\n  @return $vendor-gradients;\r\n}\r\n",
		"@function _shape-size-stripper($shape-size) {\r\n  $shape-size-spec: null;\r\n  @each $value in $shape-size {\r\n    @if ($value == \"cover\") or ($value == \"contain\") {\r\n      $value: null;\r\n    }\r\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\r\n  }\r\n  @return $shape-size-spec;\r\n}\r\n",
		"//************************************************************************//\r\n// Helper function for linear/radial-gradient-parsers.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _str-to-num($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    }\r\n\r\n    @else if $character == \".\" {\r\n      $divider: 1;\r\n    }\r\n\r\n    @else {\r\n      @if not $index {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _convert-units($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      }\r\n\r\n      @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n",
		"// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\r\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\r\n\r\n@mixin animation($animations...) {\r\n  @include prefixer(animation, $animations, webkit moz spec);\r\n}\r\n\r\n@mixin animation-name($names...) {\r\n  @include prefixer(animation-name, $names, webkit moz spec);\r\n}\r\n\r\n@mixin animation-duration($times...) {\r\n  @include prefixer(animation-duration, $times, webkit moz spec);\r\n}\r\n\r\n@mixin animation-timing-function($motions...) {\r\n  // ease | linear | ease-in | ease-out | ease-in-out\r\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n@mixin animation-iteration-count($values...) {\r\n  // infinite | <number>\r\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\r\n}\r\n\r\n@mixin animation-direction($directions...) {\r\n  // normal | alternate\r\n  @include prefixer(animation-direction, $directions, webkit moz spec);\r\n}\r\n\r\n@mixin animation-play-state($states...) {\r\n  // running | paused\r\n  @include prefixer(animation-play-state, $states, webkit moz spec);\r\n}\r\n\r\n@mixin animation-delay($times...) {\r\n  @include prefixer(animation-delay, $times, webkit moz spec);\r\n}\r\n\r\n@mixin animation-fill-mode($modes...) {\r\n  // none | forwards | backwards | both\r\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\r\n}\r\n",
		"@mixin appearance($value) {\r\n  @include prefixer(appearance, $value, webkit moz ms o spec);\r\n}\r\n",
		"@mixin backface-visibility($visibility) {\r\n  @include prefixer(backface-visibility, $visibility, webkit spec);\r\n}\r\n",
		"//************************************************************************//\r\n// Background property for adding multiple backgrounds using shorthand\r\n// notation.\r\n//************************************************************************//\r\n\r\n@mixin background($backgrounds...) {\r\n  $webkit-backgrounds: ();\r\n  $spec-backgrounds: ();\r\n\r\n  @each $background in $backgrounds {\r\n    $webkit-background: ();\r\n    $spec-background: ();\r\n    $background-type: type-of($background);\r\n\r\n    @if $background-type == string or $background-type == list {\r\n      $background-str: if($background-type == list, nth($background, 1), $background);\r\n\r\n      $url-str:       str-slice($background-str, 1, 3);\r\n      $gradient-type: str-slice($background-str, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-background: $background;\r\n        $spec-background:   $background;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-background: $background;\r\n        $spec-background:   $background;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-background: $background;\r\n      $spec-background:   $background;\r\n    }\r\n\r\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\r\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\r\n  }\r\n\r\n  background: $webkit-backgrounds;\r\n  background: $spec-backgrounds;\r\n}\r\n",
		"//************************************************************************//\r\n// Background-image property for adding multiple background images with\r\n// gradients, or for stringing multiple gradients together.\r\n//************************************************************************//\r\n\r\n@mixin background-image($images...) {\r\n  $webkit-images: ();\r\n  $spec-images: ();\r\n\r\n  @each $image in $images {\r\n    $webkit-image: ();\r\n    $spec-image: ();\r\n\r\n    @if (type-of($image) == string) {\r\n      $url-str:       str-slice($image, 1, 3);\r\n      $gradient-type: str-slice($image, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-image: $image;\r\n        $spec-image:   $image;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser($image);\r\n        $webkit-image:  map-get($gradients, webkit-image);\r\n        $spec-image:    map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser($image);\r\n        $webkit-image: map-get($gradients, webkit-image);\r\n        $spec-image:   map-get($gradients, spec-image);\r\n      }\r\n    }\r\n\r\n    $webkit-images: append($webkit-images, $webkit-image, comma);\r\n    $spec-images:   append($spec-images,   $spec-image,   comma);\r\n  }\r\n\r\n  background-image: $webkit-images;\r\n  background-image: $spec-images;\r\n}\r\n",
		"@mixin border-image($borders...) {\r\n  $webkit-borders: ();\r\n  $spec-borders: ();\r\n\r\n  @each $border in $borders {\r\n    $webkit-border: ();\r\n    $spec-border: ();\r\n    $border-type: type-of($border);\r\n\r\n    @if $border-type == string or list {\r\n      $border-str: if($border-type == list, nth($border, 1), $border);\r\n\r\n      $url-str:       str-slice($border-str, 1, 3);\r\n      $gradient-type: str-slice($border-str, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-border: $border;\r\n        $spec-border:   $border;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-border: $border;\r\n        $spec-border:   $border;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-border: $border;\r\n      $spec-border:   $border;\r\n    }\r\n\r\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\r\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\r\n  }\r\n\r\n  -webkit-border-image: $webkit-borders;\r\n          border-image: $spec-borders;\r\n          border-style: solid;\r\n}\r\n\r\n//Examples:\r\n// @include border-image(url(\"image.png\"));\r\n// @include border-image(url(\"image.png\") 20 stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow));\r\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\r\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\r\n",
		"@mixin calc($property, $value) {\r\n  #{$property}: -webkit-calc(#{$value});\r\n  #{$property}: calc(#{$value});\r\n}\r\n",
		"@mixin columns($arg: auto) {\r\n  // <column-count> || <column-width>\r\n  @include prefixer(columns, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-count($int: auto) {\r\n  // auto || integer\r\n  @include prefixer(column-count, $int, webkit moz spec);\r\n}\r\n\r\n@mixin column-gap($length: normal) {\r\n  // normal || length\r\n  @include prefixer(column-gap, $length, webkit moz spec);\r\n}\r\n\r\n@mixin column-fill($arg: auto) {\r\n  // auto || length\r\n  @include prefixer(column-fill, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule($arg) {\r\n  // <border-width> || <border-style> || <color>\r\n  @include prefixer(column-rule, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-color($color) {\r\n  @include prefixer(column-rule-color, $color, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-style($style: none) {\r\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\r\n  @include prefixer(column-rule-style, $style, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-width ($width: none) {\r\n  @include prefixer(column-rule-width, $width, webkit moz spec);\r\n}\r\n\r\n@mixin column-span($arg: none) {\r\n  // none || all\r\n  @include prefixer(column-span, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-width($length: auto) {\r\n  // auto || length\r\n  @include prefixer(column-width, $length, webkit moz spec);\r\n}\r\n",
		"@mixin filter($function: none) {\r\n  // <filter-function> [<filter-function]* | none\r\n  @include prefixer(filter, $function, webkit spec);\r\n}\r\n",
		"// CSS3 Flexible Box Model and property defaults\r\n\r\n// Custom shorthand notation for flexbox\r\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\r\n  @include display-box;\r\n  @include box-orient($orient);\r\n  @include box-pack($pack);\r\n  @include box-align($align);\r\n}\r\n\r\n@mixin display-box {\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: -ms-flexbox; // IE 10\r\n  display: box;\r\n}\r\n\r\n@mixin box-orient($orient: inline-axis) {\r\n// horizontal|vertical|inline-axis|block-axis|inherit\r\n  @include prefixer(box-orient, $orient, webkit moz spec);\r\n}\r\n\r\n@mixin box-pack($pack: start) {\r\n// start|end|center|justify\r\n  @include prefixer(box-pack, $pack, webkit moz spec);\r\n  -ms-flex-pack: $pack; // IE 10\r\n}\r\n\r\n@mixin box-align($align: stretch) {\r\n// start|end|center|baseline|stretch\r\n  @include prefixer(box-align, $align, webkit moz spec);\r\n  -ms-flex-align: $align; // IE 10\r\n}\r\n\r\n@mixin box-direction($direction: normal) {\r\n// normal|reverse|inherit\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n  -ms-flex-direction: $direction; // IE 10\r\n}\r\n\r\n@mixin box-lines($lines: single) {\r\n// single|multiple\r\n  @include prefixer(box-lines, $lines, webkit moz spec);\r\n}\r\n\r\n@mixin box-ordinal-group($int: 1) {\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n  -ms-flex-order: $int; // IE 10\r\n}\r\n\r\n@mixin box-flex($value: 0) {\r\n  @include prefixer(box-flex, $value, webkit moz spec);\r\n  -ms-flex: $value; // IE 10\r\n}\r\n\r\n@mixin box-flex-group($int: 1) {\r\n  @include prefixer(box-flex-group, $int, webkit moz spec);\r\n}\r\n\r\n// CSS3 Flexible Box Model and property defaults\r\n// Unified attributes for 2009, 2011, and 2012 flavours.\r\n\r\n// 2009 - display (box | inline-box)\r\n// 2011 - display (flexbox | inline-flexbox)\r\n// 2012 - display (flex | inline-flex)\r\n@mixin display($value) {\r\n// flex | inline-flex\r\n  @if $value == \"flex\" {\r\n    // 2009\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: box;\r\n\r\n    // 2012\r\n    display: -webkit-flex;\r\n    display: -moz-flex;\r\n    display: -ms-flexbox; // 2011 (IE 10)\r\n    display: flex;\r\n  } @else if $value == \"inline-flex\" {\r\n    display: -webkit-inline-box;\r\n    display: -moz-inline-box;\r\n    display: inline-box;\r\n\r\n    display: -webkit-inline-flex;\r\n    display: -moz-inline-flex;\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n  } @else {\r\n    display: $value;\r\n  }\r\n}\r\n\r\n// 2009 - box-flex (integer)\r\n// 2011 - flex (decimal | width decimal)\r\n// 2012 - flex (integer integer width)\r\n@mixin flex($value) {\r\n\r\n  // Grab flex-grow for older browsers.\r\n  $flex-grow: nth($value, 1);\r\n\r\n  // 2009\r\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\r\n\r\n  // 2011 (IE 10), 2012\r\n  @include prefixer(flex, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\r\n//      - box-direction (normal | reverse)\r\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\r\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\r\n@mixin flex-direction($value: row) {\r\n\r\n  // Alt values.\r\n  $value-2009: $value;\r\n  $value-2011: $value;\r\n  $direction: normal;\r\n\r\n  @if $value == row {\r\n    $value-2009: horizontal;\r\n  } @else if $value == \"row-reverse\" {\r\n    $value-2009: horizontal;\r\n    $direction: reverse;\r\n  } @else if $value == column {\r\n    $value-2009: vertical;\r\n  } @else if $value == \"column-reverse\" {\r\n    $value-2009: vertical;\r\n    $direction: reverse;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(flex-direction, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-direction: $value;\r\n}\r\n\r\n// 2009 - box-lines (single | multiple)\r\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n@mixin flex-wrap($value: nowrap) {\r\n  // Alt values\r\n  $alt-value: $value;\r\n  @if $value == nowrap {\r\n    $alt-value: single;\r\n  } @else if $value == wrap {\r\n    $alt-value: multiple;\r\n  } @else if $value == \"wrap-reverse\" {\r\n    $alt-value: multiple;\r\n  }\r\n\r\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\r\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - TODO: parse values into flex-direction/flex-wrap\r\n// 2011 - TODO: parse values into flex-direction/flex-wrap\r\n// 2012 - flex-flow (flex-direction || flex-wrap)\r\n@mixin flex-flow($value) {\r\n  @include prefixer(flex-flow, $value, webkit moz spec);\r\n}\r\n\r\n// 2009 - box-ordinal-group (integer)\r\n// 2011 - flex-order (integer)\r\n// 2012 - order (integer)\r\n@mixin order($int: 0) {\r\n  // 2009\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(order, $int, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-order: $int;\r\n}\r\n\r\n// 2012 - flex-grow (number)\r\n@mixin flex-grow($number: 0) {\r\n  @include prefixer(flex-grow, $number, webkit moz spec);\r\n  -ms-flex-positive: $number;\r\n}\r\n\r\n// 2012 - flex-shrink (number)\r\n@mixin flex-shrink($number: 1) {\r\n  @include prefixer(flex-shrink, $number, webkit moz spec);\r\n  -ms-flex-negative: $number;\r\n}\r\n\r\n// 2012 - flex-basis (number)\r\n@mixin flex-basis($width: auto) {\r\n  @include prefixer(flex-basis, $width, webkit moz spec);\r\n  -ms-flex-preferred-size: $width;\r\n}\r\n\r\n// 2009 - box-pack (start | end | center | justify)\r\n// 2011 - flex-pack (start | end | center | justify)\r\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\r\n@mixin justify-content($value: flex-start) {\r\n\r\n  // Alt values.\r\n  $alt-value: $value;\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  } @else if $value == \"space-between\" {\r\n    $alt-value: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $alt-value: distribute;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-pack: $alt-value;\r\n}\r\n\r\n// 2009 - box-align (start | end | center | baseline | stretch)\r\n// 2011 - flex-align (start | end | center | baseline | stretch)\r\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-items($value: stretch) {\r\n\r\n  $alt-value: $value;\r\n\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-align, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(align-items, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-align: $alt-value;\r\n}\r\n\r\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\r\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-self($value: auto) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-self, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-item-align: $value-2011;\r\n}\r\n\r\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\r\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\r\n@mixin align-content($value: stretch) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  } @else if $value == \"space-between\" {\r\n    $value-2011: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $value-2011: distribute;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-content, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-line-pack: $value-2011;\r\n}\r\n",
		"@mixin font-face(\r\n  $font-family,\r\n  $file-path,\r\n  $weight: normal,\r\n  $style: normal,\r\n  $asset-pipeline: $asset-pipeline,\r\n  $file-formats: eot woff2 woff ttf svg) {\r\n\r\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\r\n\r\n  @font-face {\r\n    font-family: $font-family;\r\n    font-style: $style;\r\n    font-weight: $weight;\r\n\r\n    src: font-source-declaration(\r\n      $font-family,\r\n      $file-path,\r\n      $asset-pipeline,\r\n      $file-formats,\r\n      $font-url-prefix\r\n    );\r\n  }\r\n}\r\n",
		"@mixin font-feature-settings($settings...) {\r\n  @if length($settings) == 0 { $settings: none; }\r\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\r\n}\r\n",
		"// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\r\n@mixin hidpi($ratio: 1.3) {\r\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\r\n  only screen and (min--moz-device-pixel-ratio: $ratio),\r\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\r\n  only screen and (min-resolution: round($ratio * 96dpi)),\r\n  only screen and (min-resolution: $ratio * 1dppx) {\r\n    @content;\r\n  }\r\n}\r\n",
		"@mixin hyphens($hyphenation: none) {\r\n  // none | manual | auto\r\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\r\n}\r\n",
		"@mixin image-rendering ($mode:auto) {\r\n\r\n  @if ($mode == crisp-edges) {\r\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\r\n    image-rendering: -moz-crisp-edges;\r\n    image-rendering: -o-crisp-edges;\r\n    image-rendering: -webkit-optimize-contrast;\r\n    image-rendering: crisp-edges;\r\n  }\r\n\r\n  @else {\r\n    image-rendering: $mode;\r\n  }\r\n}\r\n",
		"// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\r\n@mixin keyframes($name) {\r\n  $original-prefix-for-webkit:    $prefix-for-webkit;\r\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\r\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\r\n  $original-prefix-for-opera:     $prefix-for-opera;\r\n  $original-prefix-for-spec:      $prefix-for-spec;\r\n\r\n  @if $original-prefix-for-webkit {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-webkit: true !global;\r\n    @-webkit-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @if $original-prefix-for-mozilla {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-mozilla: true !global;\r\n    @-moz-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\r\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\r\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\r\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\r\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\r\n\r\n  @if $original-prefix-for-spec {\r\n    @keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin linear-gradient($pos, $g1, $g2: null,\r\n                       $g3: null, $g4: null,\r\n                       $g5: null, $g6: null,\r\n                       $g7: null, $g8: null,\r\n                       $g9: null, $g10: null,\r\n                       $fallback: null) {\r\n  // Detect what type of value exists in $pos\r\n  $pos-type: type-of(nth($pos, 1));\r\n  $pos-spec: null;\r\n  $pos-degree: null;\r\n\r\n  // If $pos is missing from mixin, reassign vars and add default position\r\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\r\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\r\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\r\n    $pos: null;\r\n  }\r\n\r\n  @if $pos {\r\n    $positions: _linear-positions-parser($pos);\r\n    $pos-degree: nth($positions, 1);\r\n    $pos-spec:   nth($positions, 2);\r\n  }\r\n\r\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\r\n\r\n  // Set $g1 as the default fallback color\r\n  $fallback-color: nth($g1, 1);\r\n\r\n  // If $fallback is a color use that color as the fallback color\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  background-color: $fallback-color;\r\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\r\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\r\n}\r\n",
		"@mixin perspective($depth: none) {\r\n  // none | <length>\r\n  @include prefixer(perspective, $depth, webkit moz spec);\r\n}\r\n\r\n@mixin perspective-origin($value: 50% 50%) {\r\n  @include prefixer(perspective-origin, $value, webkit moz spec);\r\n}\r\n",
		"@mixin placeholder {\r\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\r\n  @each $placeholder in $placeholders {\r\n    &:#{$placeholder}-placeholder {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"// Requires Sass 3.1+\r\n@mixin radial-gradient($g1, $g2,\r\n                       $g3: null, $g4: null,\r\n                       $g5: null, $g6: null,\r\n                       $g7: null, $g8: null,\r\n                       $g9: null, $g10: null,\r\n                       $pos: null,\r\n                       $shape-size: null,\r\n                       $fallback: null) {\r\n\r\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\r\n  $g1:  nth($data, 1);\r\n  $g2:  nth($data, 2);\r\n  $pos: nth($data, 3);\r\n  $shape-size: nth($data, 4);\r\n\r\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\r\n\r\n  // Strip deprecated cover/contain for spec\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  // Set $g1 as the default fallback color\r\n  $first-color: nth($full, 1);\r\n  $fallback-color: nth($first-color, 1);\r\n\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  // Add Commas and spaces\r\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\r\n  $pos:        if($pos, \"#{$pos}, \", null);\r\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\r\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\r\n\r\n  background-color:  $fallback-color;\r\n  background-image: -webkit-radial-gradient(#{$pos}#{$shape-size}#{$full});\r\n  background-image: radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full});\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin text-decoration($value) {\r\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\r\n  @include prefixer(text-decoration, $value, moz);\r\n}\r\n\r\n@mixin text-decoration-line($line: none) {\r\n// none || underline || overline || line-through\r\n  @include prefixer(text-decoration-line, $line, moz);\r\n}\r\n\r\n@mixin text-decoration-style($style: solid) {\r\n// solid || double || dotted || dashed || wavy\r\n  @include prefixer(text-decoration-style, $style, moz webkit);\r\n}\r\n\r\n@mixin text-decoration-color($color: currentColor) {\r\n// currentColor || <color>\r\n  @include prefixer(text-decoration-color, $color, moz);\r\n}\r\n",
		"@mixin transform($property: none) {\r\n  // none | <transform-function>\r\n  @include prefixer(transform, $property, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-origin($axes: 50%) {\r\n  // x-axis - left | center | right  | length | %\r\n  // y-axis - top  | center | bottom | length | %\r\n  // z-axis -                          length\r\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-style($style: flat) {\r\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\r\n}\r\n",
		"// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\r\n// Example: @include transition (all 2s ease-in-out);\r\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\r\n//          @include transition-property (transform, opacity);\r\n\r\n@mixin transition($properties...) {\r\n  // Fix for vendor-prefix transform property\r\n  $needs-prefixes: false;\r\n  $webkit: ();\r\n  $moz: ();\r\n  $spec: ();\r\n\r\n  // Create lists for vendor-prefixed transform\r\n  @each $list in $properties {\r\n    @if nth($list, 1) == \"transform\" {\r\n      $needs-prefixes: true;\r\n      $list1: -webkit-transform;\r\n      $list2: -moz-transform;\r\n      $list3: ();\r\n\r\n      @each $var in $list {\r\n        $list3: join($list3, $var);\r\n\r\n        @if $var != \"transform\" {\r\n          $list1: join($list1, $var);\r\n          $list2: join($list2, $var);\r\n        }\r\n      }\r\n\r\n      $webkit: append($webkit, $list1);\r\n      $moz:    append($moz,    $list2);\r\n      $spec:   append($spec,   $list3);\r\n    } @else {\r\n      $webkit: append($webkit, $list, comma);\r\n      $moz:    append($moz,    $list, comma);\r\n      $spec:   append($spec,   $list, comma);\r\n    }\r\n  }\r\n\r\n  @if $needs-prefixes {\r\n    -webkit-transition: $webkit;\r\n       -moz-transition: $moz;\r\n            transition: $spec;\r\n  } @else {\r\n    @if length($properties) >= 1 {\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    } @else {\r\n      $properties: all 0.15s ease-out 0s;\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin transition-property($properties...) {\r\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\r\n     -moz-transition-property: transition-property-names($properties, \"moz\");\r\n          transition-property: transition-property-names($properties, false);\r\n}\r\n\r\n@mixin transition-duration($times...) {\r\n  @include prefixer(transition-duration, $times, webkit moz spec);\r\n}\r\n\r\n@mixin transition-timing-function($motions...) {\r\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\r\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n@mixin transition-delay($times...) {\r\n  @include prefixer(transition-delay, $times, webkit moz spec);\r\n}\r\n",
		"@mixin user-select($value: none) {\r\n  @include prefixer(user-select, $value, webkit moz ms spec);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-left-color: #e8ae1a;\r\n///     border-right-color: #76cd9c;\r\n///     border-top-color: #a60b55;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-color`\r\n\r\n@mixin border-color($vals...) {\r\n  @include directional-property(border, color, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\r\n///\r\n/// @param {Number} $radii\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element-one {\r\n///     @include border-top-radius(5px);\r\n///   }\r\n///\r\n///   .element-two {\r\n///     @include border-left-radius(3px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element-one {\r\n///     border-top-left-radius: 5px;\r\n///     border-top-right-radius: 5px;\r\n///   }\r\n///\r\n///   .element-two {\r\n///     border-bottom-left-radius: 3px;\r\n///     border-top-left-radius: 3px;\r\n///   }\r\n///\r\n/// @output `border-radius`\r\n\r\n@mixin border-top-radius($radii) {\r\n  border-top-left-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-right-radius($radii) {\r\n  border-bottom-right-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-bottom-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-bottom-right-radius: $radii;\r\n}\r\n\r\n@mixin border-left-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-top-left-radius: $radii;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-style(dashed null solid);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-style: solid;\r\n///     border-top-style: dashed;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-style`\r\n\r\n@mixin border-style($vals...) {\r\n  @include directional-property(border, style, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-width(1em null 20px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-width: 20px;\r\n///     border-top-width: 1em;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-width`\r\n\r\n@mixin border-width($vals...) {\r\n  @include directional-property(border, width, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\r\n///\r\n/// @example scss - Usage\r\n///   #{$all-buttons} {\r\n///     background-color: #f00;\r\n///   }\r\n///\r\n///   #{$all-buttons-focus},\r\n///   #{$all-buttons-hover} {\r\n///     background-color: #0f0;\r\n///   }\r\n///\r\n///   #{$all-buttons-active} {\r\n///     background-color: #00f;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   button,\r\n///   input[type=\"button\"],\r\n///   input[type=\"reset\"],\r\n///   input[type=\"submit\"] {\r\n///     background-color: #f00;\r\n///   }\r\n///\r\n///   button:focus,\r\n///   input[type=\"button\"]:focus,\r\n///   input[type=\"reset\"]:focus,\r\n///   input[type=\"submit\"]:focus,\r\n///   button:hover,\r\n///   input[type=\"button\"]:hover,\r\n///   input[type=\"reset\"]:hover,\r\n///   input[type=\"submit\"]:hover {\r\n///     background-color: #0f0;\r\n///   }\r\n///\r\n///   button:active,\r\n///   input[type=\"button\"]:active,\r\n///   input[type=\"reset\"]:active,\r\n///   input[type=\"submit\"]:active {\r\n///     background-color: #00f;\r\n///   }\r\n///\r\n/// @require assign-inputs\r\n///\r\n/// @type List\r\n///\r\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\r\n\r\n$buttons-list: 'button',\r\n               'input[type=\"button\"]',\r\n               'input[type=\"reset\"]',\r\n               'input[type=\"submit\"]';\r\n\r\n$all-buttons:        assign-inputs($buttons-list);\r\n$all-buttons-active: assign-inputs($buttons-list, active);\r\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\r\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\r\n\r\n$all-button-inputs:        $all-buttons;\r\n$all-button-inputs-active: $all-buttons-active;\r\n$all-button-inputs-focus:  $all-buttons-focus;\r\n$all-button-inputs-hover:  $all-buttons-hover;\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides an easy way to include a clearfix for containing floats.\r\n///\r\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include clearfix;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::after {\r\n///     clear: both;\r\n///     content: \"\";\r\n///     display: table;\r\n///   }\r\n\r\n@mixin clearfix {\r\n  &::after {\r\n    clear: both;\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Truncates text and adds an ellipsis to represent overflow.\r\n///\r\n/// @param {Number} $width [100%]\r\n///   Max-width for the string to respect before being truncated\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include ellipsis;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     display: inline-block;\r\n///     max-width: 100%;\r\n///     overflow: hidden;\r\n///     text-overflow: ellipsis;\r\n///     white-space: nowrap;\r\n///     word-wrap: normal;\r\n///   }\r\n\r\n@mixin ellipsis($width: 100%) {\r\n  display: inline-block;\r\n  max-width: $width;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  word-wrap: normal;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Georgia font stack.\r\n///\r\n/// @type List\r\n\r\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\r\n\r\n/// Helvetica font stack.\r\n///\r\n/// @type List\r\n\r\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\r\n\r\n/// Lucida Grande font stack.\r\n///\r\n/// @type List\r\n\r\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\r\n\r\n/// Monospace font stack.\r\n///\r\n/// @type List\r\n\r\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\r\n\r\n/// Verdana font stack.\r\n///\r\n/// @type List\r\n\r\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\r\n",
		"/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\r\n///\r\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include hide-text;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     overflow: hidden;\r\n///     text-indent: 101%;\r\n///     white-space: nowrap;\r\n///   }\r\n///\r\n/// @todo Remove height argument in v5.0.0\r\n\r\n@mixin hide-text($height: null) {\r\n  overflow: hidden;\r\n  text-indent: 101%;\r\n  white-space: nowrap;\r\n\r\n  @if $height {\r\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include margin(null 10px 3em 20vh);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     margin-bottom: 3em;\r\n///     margin-left: 20vh;\r\n///     margin-right: 10px;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `margin`\r\n\r\n@mixin margin($vals...) {\r\n  @include directional-property(margin, false, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include padding(12vh null 10px 5%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     padding-bottom: 10px;\r\n///     padding-left: 5%;\r\n///     padding-top: 12vh;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `padding`\r\n\r\n@mixin padding($vals...) {\r\n  @include directional-property(padding, false, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Position} $position [relative]\r\n///   A CSS position value\r\n///\r\n/// @param {Arglist} $coordinates [null null null null]\r\n///   List of values that correspond to the 4-value syntax for the edges of a box\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include position(absolute, 0 null null 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     left: 10em;\r\n///     position: absolute;\r\n///     top: 0;\r\n///   }\r\n///\r\n/// @require {function} is-length\r\n/// @require {function} unpack\r\n\r\n@mixin position($position: relative, $coordinates: null null null null) {\r\n  @if type-of($position) == list {\r\n    $coordinates: $position;\r\n    $position: relative;\r\n  }\r\n\r\n  $coordinates: unpack($coordinates);\r\n\r\n  $offsets: (\r\n    top:    nth($coordinates, 1),\r\n    right:  nth($coordinates, 2),\r\n    bottom: nth($coordinates, 3),\r\n    left:   nth($coordinates, 4)\r\n  );\r\n\r\n  position: $position;\r\n\r\n  @each $offset, $value in $offsets {\r\n    @if is-length($value) {\r\n      #{$offset}: $value;\r\n    }\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// A mixin for generating vendor prefixes on non-standardized properties.\r\n///\r\n/// @param {String} $property\r\n///   Property to prefix\r\n///\r\n/// @param {*} $value\r\n///   Value to use\r\n///\r\n/// @param {List} $prefixes\r\n///   Prefixes to define\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include prefixer(border-radius, 10px, webkit ms spec);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     -webkit-border-radius: 10px;\r\n///     -moz-border-radius: 10px;\r\n///     border-radius: 10px;\r\n///   }\r\n///\r\n/// @require {variable} $prefix-for-webkit\r\n/// @require {variable} $prefix-for-mozilla\r\n/// @require {variable} $prefix-for-microsoft\r\n/// @require {variable} $prefix-for-opera\r\n/// @require {variable} $prefix-for-spec\r\n\r\n@mixin prefixer($property, $value, $prefixes) {\r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit {\r\n      @if $prefix-for-webkit {\r\n        -webkit-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == moz {\r\n      @if $prefix-for-mozilla {\r\n        -moz-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == ms {\r\n      @if $prefix-for-microsoft {\r\n        -ms-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == o {\r\n      @if $prefix-for-opera {\r\n        -o-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == spec {\r\n      @if $prefix-for-spec {\r\n        #{$property}: $value;\r\n      }\r\n    } @else  {\r\n      @warn \"Unrecognized prefix: #{$prefix}\";\r\n    }\r\n  }\r\n}\r\n\r\n@mixin disable-prefix-for-all() {\r\n  $prefix-for-webkit:    false !global;\r\n  $prefix-for-mozilla:   false !global;\r\n  $prefix-for-microsoft: false !global;\r\n  $prefix-for-opera:     false !global;\r\n  $prefix-for-spec:      false !global;\r\n}\r\n",
		"@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\r\n  @if $asset-pipeline {\r\n    background-image: image-url(\"#{$filename}.#{$extension}\");\r\n  } @else {\r\n    background-image:       url(\"#{$filename}.#{$extension}\");\r\n  }\r\n\r\n  @include hidpi {\r\n    @if $asset-pipeline {\r\n      @if $retina-filename {\r\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\r\n      } @else {\r\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    } @else {\r\n      @if $retina-filename {\r\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\r\n      } @else {\r\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    }\r\n\r\n    background-size: $background-size;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Sets the `width` and `height` of the element.\r\n///\r\n/// @param {List} $size\r\n///   A list of at most 2 size values.\r\n///\r\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\r\n///\r\n/// @example scss - Usage\r\n///   .first-element {\r\n///     @include size(2em);\r\n///   }\r\n///\r\n///   .second-element {\r\n///     @include size(auto 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .first-element {\r\n///     width: 2em;\r\n///     height: 2em;\r\n///   }\r\n///\r\n///   .second-element {\r\n///     width: auto;\r\n///     height: 10em;\r\n///   }\r\n///\r\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\r\n\r\n@mixin size($value) {\r\n  $width: nth($value, 1);\r\n  $height: $width;\r\n\r\n  @if length($value) > 1 {\r\n    $height: nth($value, 2);\r\n  }\r\n\r\n  @if is-size($height) {\r\n    height: $height;\r\n  } @else {\r\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\r\n  }\r\n\r\n  @if is-size($width) {\r\n    width: $width;\r\n  } @else {\r\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\r\n///\r\n/// @example scss - Usage\r\n///   #{$all-text-inputs} {\r\n///     border: 1px solid #f00;\r\n///   }\r\n///\r\n///   #{$all-text-inputs-focus},\r\n///   #{$all-text-inputs-hover} {\r\n///     border: 1px solid #0f0;\r\n///   }\r\n///\r\n///   #{$all-text-inputs-active} {\r\n///     border: 1px solid #00f;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   input[type=\"color\"],\r\n///   input[type=\"date\"],\r\n///   input[type=\"datetime\"],\r\n///   input[type=\"datetime-local\"],\r\n///   input[type=\"email\"],\r\n///   input[type=\"month\"],\r\n///   input[type=\"number\"],\r\n///   input[type=\"password\"],\r\n///   input[type=\"search\"],\r\n///   input[type=\"tel\"],\r\n///   input[type=\"text\"],\r\n///   input[type=\"time\"],\r\n///   input[type=\"url\"],\r\n///   input[type=\"week\"],\r\n///   textarea {\r\n///     border: 1px solid #f00;\r\n///   }\r\n///\r\n///   input[type=\"color\"]:focus,\r\n///   input[type=\"date\"]:focus,\r\n///   input[type=\"datetime\"]:focus,\r\n///   input[type=\"datetime-local\"]:focus,\r\n///   input[type=\"email\"]:focus,\r\n///   input[type=\"month\"]:focus,\r\n///   input[type=\"number\"]:focus,\r\n///   input[type=\"password\"]:focus,\r\n///   input[type=\"search\"]:focus,\r\n///   input[type=\"tel\"]:focus,\r\n///   input[type=\"text\"]:focus,\r\n///   input[type=\"time\"]:focus,\r\n///   input[type=\"url\"]:focus,\r\n///   input[type=\"week\"]:focus,\r\n///   textarea:focus,\r\n///   input[type=\"color\"]:hover,\r\n///   input[type=\"date\"]:hover,\r\n///   input[type=\"datetime\"]:hover,\r\n///   input[type=\"datetime-local\"]:hover,\r\n///   input[type=\"email\"]:hover,\r\n///   input[type=\"month\"]:hover,\r\n///   input[type=\"number\"]:hover,\r\n///   input[type=\"password\"]:hover,\r\n///   input[type=\"search\"]:hover,\r\n///   input[type=\"tel\"]:hover,\r\n///   input[type=\"text\"]:hover,\r\n///   input[type=\"time\"]:hover,\r\n///   input[type=\"url\"]:hover,\r\n///   input[type=\"week\"]:hover,\r\n///   textarea:hover {\r\n///     border: 1px solid #0f0;\r\n///   }\r\n///\r\n///   input[type=\"color\"]:active,\r\n///   input[type=\"date\"]:active,\r\n///   input[type=\"datetime\"]:active,\r\n///   input[type=\"datetime-local\"]:active,\r\n///   input[type=\"email\"]:active,\r\n///   input[type=\"month\"]:active,\r\n///   input[type=\"number\"]:active,\r\n///   input[type=\"password\"]:active,\r\n///   input[type=\"search\"]:active,\r\n///   input[type=\"tel\"]:active,\r\n///   input[type=\"text\"]:active,\r\n///   input[type=\"time\"]:active,\r\n///   input[type=\"url\"]:active,\r\n///   input[type=\"week\"]:active,\r\n///   textarea:active {\r\n///     border: 1px solid #00f;\r\n///   }\r\n///\r\n/// @require assign-inputs\r\n///\r\n/// @type List\r\n\r\n$text-inputs-list: 'input[type=\"color\"]',\r\n                   'input[type=\"date\"]',\r\n                   'input[type=\"datetime\"]',\r\n                   'input[type=\"datetime-local\"]',\r\n                   'input[type=\"email\"]',\r\n                   'input[type=\"month\"]',\r\n                   'input[type=\"number\"]',\r\n                   'input[type=\"password\"]',\r\n                   'input[type=\"search\"]',\r\n                   'input[type=\"tel\"]',\r\n                   'input[type=\"text\"]',\r\n                   'input[type=\"time\"]',\r\n                   'input[type=\"url\"]',\r\n                   'input[type=\"week\"]',\r\n                   'input:not([type])',\r\n                   'textarea';\r\n\r\n$all-text-inputs:        assign-inputs($text-inputs-list);\r\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\r\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\r\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\r\n///\r\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\r\n///\r\n/// @type cubic-bezier\r\n\r\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\r\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\r\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\r\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\r\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\r\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\r\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\r\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\r\n\r\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\r\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\r\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\r\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\r\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\r\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\r\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\r\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\r\n\r\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\r\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\r\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\r\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\r\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\r\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\r\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\r\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\r\n",
		"@mixin triangle($size, $color, $direction) {\r\n  $width: nth($size, 1);\r\n  $height: nth($size, length($size));\r\n  $foreground-color: nth($color, 1);\r\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\r\n  height: 0;\r\n  width: 0;\r\n\r\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\r\n    $width: $width / 2;\r\n    $height: if(length($size) > 1, $height, $height/2);\r\n\r\n    @if $direction == up {\r\n      border-bottom: $height solid $foreground-color;\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n    } @else if $direction == right {\r\n      border-bottom: $width solid $background-color;\r\n      border-left: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    } @else if $direction == down {\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n      border-top: $height solid $foreground-color;\r\n    } @else if $direction == left {\r\n      border-bottom: $width solid $background-color;\r\n      border-right: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == up-right) or ($direction == up-left) {\r\n    border-top: $height solid $foreground-color;\r\n\r\n    @if $direction == up-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == up-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == down-right) or ($direction == down-left) {\r\n    border-bottom: $height solid $foreground-color;\r\n\r\n    @if $direction == down-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == down-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == inset-up) {\r\n    border-color: $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-down) {\r\n    border-color: $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-right) {\r\n    border-color: $background-color $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  } @else if ($direction == inset-left) {\r\n    border-color: $background-color $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides an easy way to change the `word-wrap` property.\r\n///\r\n/// @param {String} $wrap [break-word]\r\n///   Value for the `word-break` property.\r\n///\r\n/// @example scss - Usage\r\n///   .wrapper {\r\n///     @include word-wrap(break-word);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .wrapper {\r\n///     overflow-wrap: break-word;\r\n///     word-break: break-all;\r\n///     word-wrap: break-word;\r\n///   }\r\n\r\n@mixin word-wrap($wrap: break-word) {\r\n  overflow-wrap: $wrap;\r\n  word-wrap: $wrap;\r\n\r\n  @if $wrap == break-word {\r\n    word-break: break-all;\r\n  } @else {\r\n    word-break: $wrap;\r\n  }\r\n}\r\n",
		"// The following features have been deprecated and will be removed in the next MAJOR version release\r\n\r\n@mixin inline-block {\r\n  display: inline-block;\r\n\r\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\r\n\r\n  @if type-of($style) == string and type-of($base-color) == color {\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == string and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: #4294f0;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == color {\r\n    $base-color: $style;\r\n    $style: simple;\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: $style;\r\n    $style: simple;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == number {\r\n    $padding: $base-color;\r\n    $text-size: $style;\r\n    $base-color: #4294f0;\r\n    $style: simple;\r\n\r\n    @if $padding == #4294f0 {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n// Selector Style Button\r\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\r\n  // Grayscale button\r\n  @if $type == simple and $b-color == grayscale($b-color) {\r\n    @include simple($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == shiny and $b-color == grayscale($b-color) {\r\n    @include shiny($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == pill and $b-color == grayscale($b-color) {\r\n    @include pill($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == flat and $b-color == grayscale($b-color) {\r\n    @include flat($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  // Colored button\r\n  @if $type == simple {\r\n    @include simple($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == shiny {\r\n    @include shiny($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == pill {\r\n    @include pill($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == flat {\r\n    @include flat($b-color, false, $t-size, $pad);\r\n  }\r\n}\r\n\r\n// Simple Button\r\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\r\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\r\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\r\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border;\r\n  border-radius: 3px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-decoration: none;\r\n  text-shadow: 0 1px 0 $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\r\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n    }\r\n\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\r\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\r\n\r\n    @if $grayscale == true {\r\n      $border-active:       grayscale($border-active);\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    border: 1px solid $border-active;\r\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\r\n  }\r\n}\r\n\r\n// Shiny Button\r\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\r\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\r\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\r\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\r\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\r\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\r\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $border-bottom: grayscale($border-bottom);\r\n    $fourth-stop:   grayscale($fourth-stop);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $second-stop:   grayscale($second-stop);\r\n    $text-shadow:   grayscale($text-shadow);\r\n    $third-stop:    grayscale($third-stop);\r\n  }\r\n\r\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\r\n\r\n  border: 1px solid $border;\r\n  border-bottom: 1px solid $border-bottom;\r\n  border-radius: 5px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n\r\n  &:hover:not(:disabled) {\r\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\r\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\r\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\r\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\r\n\r\n    @if $grayscale == true {\r\n      $first-stop-hover:  grayscale($first-stop-hover);\r\n      $second-stop-hover: grayscale($second-stop-hover);\r\n      $third-stop-hover:  grayscale($third-stop-hover);\r\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\r\n    }\r\n\r\n    @include linear-gradient(top, $first-stop-hover  0%,\r\n                                  $second-stop-hover 50%,\r\n                                  $third-stop-hover  50%,\r\n                                  $fourth-stop-hover 100%);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\r\n\r\n    @if $grayscale == true {\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\r\n  }\r\n}\r\n\r\n// Pill Button\r\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\r\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\r\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\r\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\r\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\r\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border-bottom: grayscale($border-bottom);\r\n    $border-sides:  grayscale($border-sides);\r\n    $border-top:    grayscale($border-top);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border-top;\r\n  border-color: $border-top $border-sides $border-bottom;\r\n  border-radius: 16px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: normal;\r\n  line-height: 1;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\r\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\r\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\r\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\r\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\r\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\r\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $border-bottom:       grayscale($border-bottom);\r\n      $border-sides:        grayscale($border-sides);\r\n      $border-top:          grayscale($border-top);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n      $text-shadow-hover:   grayscale($text-shadow-hover);\r\n    }\r\n\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n\r\n    background-clip: padding-box;\r\n    border: 1px solid $border-top;\r\n    border-color: $border-top $border-sides $border-bottom;\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n    text-shadow: 0 -1px 1px $text-shadow-hover;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\r\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\r\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\r\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\r\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\r\n\r\n    @if $grayscale == true {\r\n      $active-color:         grayscale($active-color);\r\n      $border-active:        grayscale($border-active);\r\n      $border-bottom-active: grayscale($border-bottom-active);\r\n      $inset-shadow-active:  grayscale($inset-shadow-active);\r\n      $text-shadow-active:   grayscale($text-shadow-active);\r\n    }\r\n\r\n    background: $active-color;\r\n    border: 1px solid $border-active;\r\n    border-bottom: 1px solid $border-bottom-active;\r\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\r\n    text-shadow: 0 -1px 1px $text-shadow-active;\r\n  }\r\n}\r\n\r\n// Flat Button\r\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n  }\r\n\r\n  background-color: $base-color;\r\n  border-radius: 3px;\r\n  border: 0;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  padding: $padding;\r\n  text-decoration: none;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled){\r\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover: grayscale($base-color-hover);\r\n    }\r\n\r\n    background-color: $base-color-hover;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-active: grayscale($base-color-active);\r\n    }\r\n\r\n    background-color: $base-color-active;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n// Flexible grid\r\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\r\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($width / $container-width);\r\n\r\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n// Flexible gutter\r\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($gutter / $container-width);\r\n\r\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@function grid-width($n) {\r\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\r\n\r\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@function golden-ratio($value, $increment) {\r\n  @return modular-scale($increment, $value, $ratio: $golden);\r\n\r\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\r\n}\r\n\r\n@mixin box-sizing($box) {\r\n  @include prefixer(box-sizing, $box, webkit moz spec);\r\n\r\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\r\n}\r\n",
		"/*\r\n *                        ___\r\n *                       /\\_ \\\r\n *  _____     ___     ___\\//\\ \\      __\r\n * /\\ '__`\\  / __`\\  / __`\\\\ \\ \\   /'__`\\\r\n * \\ \\ \\_\\ \\/\\ \\_\\ \\/\\ \\_\\ \\\\_\\ \\_/\\  __/\r\n *  \\ \\ ,__/\\ \\____/\\ \\____//\\____\\ \\____\\\r\n *   \\ \\ \\/  \\/___/  \\/___/ \\/____/\\/____/\r\n *    \\ \\_\\\r\n *     \\/_/\r\n *\r\n * Designed, built, and released under MIT license by @mdo. Learn more at\r\n * https://github.com/poole/poole.\r\n */\r\n\r\n\r\n/*\r\n * Contents\r\n *\r\n * Body resets\r\n * Custom type\r\n * Messages\r\n * Container\r\n * Masthead\r\n * Posts and pages\r\n * Pagination\r\n * Reverse layout\r\n * Themes\r\n */\r\n\r\n\r\n/*\r\n * Body resets\r\n *\r\n * Update the foundational and global aspects of the page.\r\n */\r\n\r\n* {\r\n  -webkit-box-sizing: border-box;\r\n     -moz-box-sizing: border-box;\r\n          box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nhtml {\r\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n}\r\n@media (min-width: 38em) {\r\n  html {\r\n    font-size: 20px;\r\n  }\r\n}\r\n\r\nbody {\r\n  color: #515151;\r\n  background-color: #fff;\r\n  -webkit-text-size-adjust: 100%;\r\n      -ms-text-size-adjust: 100%;\r\n}\r\n\r\n/* No `:visited` state is required by default (browsers will use `a`) */\r\na {\r\n  color: #268bd2;\r\n  text-decoration: none;\r\n}\r\na strong {\r\n  color: inherit;\r\n}\r\n/* `:focus` is linked to `:hover` for basic accessibility */\r\na:hover,\r\na:focus {\r\n  text-decoration: underline;\r\n}\r\n\r\n/* Headings */\r\nh1, h2, h3, h4, h5, h6 {\r\n  margin-bottom: .5rem;\r\n  font-weight: bold;\r\n  line-height: 1.25;\r\n  color: #313131;\r\n  text-rendering: optimizeLegibility;\r\n}\r\nh1 {\r\n  font-size: 2rem;\r\n}\r\nh2 {\r\n  margin-top: 1rem;\r\n  font-size: 1.5rem;\r\n}\r\nh3 {\r\n  margin-top: 1.5rem;\r\n  font-size: 1.25rem;\r\n}\r\nh4, h5, h6 {\r\n  margin-top: 1rem;\r\n  font-size: 1rem;\r\n}\r\n\r\n/* Body text */\r\np {\r\n  margin-top: 0;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nstrong {\r\n  color: #303030;\r\n}\r\n\r\n\r\n/* Lists */\r\nul, ol, dl {\r\n  margin-top: 0;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\ndt {\r\n  font-weight: bold;\r\n}\r\ndd {\r\n  margin-bottom: .5rem;\r\n}\r\n\r\n/* Misc */\r\nhr {\r\n  position: relative;\r\n  margin: 1.5rem 0;\r\n  border: 0;\r\n  border-top: 1px solid #eee;\r\n  border-bottom: 1px solid #fff;\r\n}\r\n\r\nabbr {\r\n  font-size: 85%;\r\n  font-weight: bold;\r\n  color: #555;\r\n  text-transform: uppercase;\r\n}\r\nabbr[title] {\r\n  cursor: help;\r\n  border-bottom: 1px dotted #e5e5e5;\r\n}\r\n\r\n/* Code */\r\ncode,\r\npre {\r\n  font-family: Menlo, Monaco, \"Courier New\", monospace;\r\n}\r\ncode {\r\n  padding: .25em .5em;\r\n  font-size: 85%;\r\n  color: #bf616a;\r\n  background-color: #f9f9f9;\r\n  border-radius: 3px;\r\n}\r\npre {\r\n  display: block;\r\n  overflow-x: auto;\r\n  max-width: 100%;\r\n  margin-top: 0;\r\n  margin-bottom: 1rem;\r\n  padding: 1rem;\r\n  font-size: .8rem;\r\n  line-height: 1.4;\r\n  white-space: pre;\r\n  white-space: pre;\r\n  word-break: break-all;\r\n  word-wrap: break-word;\r\n  background-color: #f9f9f9;\r\n}\r\npre code {\r\n  padding: 0;\r\n  font-size: 100%;\r\n  color: inherit;\r\n  background-color: transparent;\r\n}\r\n\r\n/* Pygments via Jekyll */\r\n.highlight {\r\n  margin-bottom: 1rem;\r\n  border-radius: 4px;\r\n}\r\n.highlight pre {\r\n  margin-bottom: 0;\r\n}\r\n\r\n/* Gist via GitHub Pages */\r\n.gist .gist-file {\r\n  font-family: Menlo, Monaco, \"Courier New\", monospace !important;\r\n}\r\n.gist .markdown-body {\r\n  padding: 15px;\r\n}\r\n.gist pre {\r\n  padding: 0;\r\n  background-color: transparent;\r\n}\r\n.gist .gist-file .gist-data {\r\n  font-size: .8rem !important;\r\n  line-height: 1.4;\r\n}\r\n.gist code {\r\n  padding: 0;\r\n  color: inherit;\r\n  background-color: transparent;\r\n  border-radius: 0;\r\n}\r\n\r\n/* Quotes */\r\nblockquote {\r\n  padding: .5rem 1rem;\r\n  margin: .8rem 0;\r\n  color: #7a7a7a;\r\n  border-left: .25rem solid #e5e5e5;\r\n}\r\nblockquote p:last-child {\r\n  margin-bottom: 0;\r\n}\r\n@media (min-width: 30em) {\r\n  blockquote {\r\n    padding-right: 5rem;\r\n    padding-left: 1.25rem;\r\n  }\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  margin: 0 0 1rem;\r\n  border-radius: 5px;\r\n}\r\n\r\n/* Tables */\r\ntable {\r\n  margin-bottom: 1rem;\r\n  width: 100%;\r\n  border: 1px solid #e5e5e5;\r\n  border-collapse: collapse;\r\n}\r\ntd,\r\nth {\r\n  padding: .25rem .5rem;\r\n  border: 1px solid #e5e5e5;\r\n}\r\ntbody tr:nth-child(odd) td,\r\ntbody tr:nth-child(odd) th {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n\r\n/*\r\n * Custom type\r\n *\r\n * Extend paragraphs with `.lead` for larger introductory text.\r\n */\r\n\r\n.lead {\r\n  font-size: 1.25rem;\r\n  font-weight: 300;\r\n}\r\n\r\n\r\n/*\r\n * Messages\r\n *\r\n * Show alert messages to users. You may add it to single elements like a `<p>`,\r\n * or to a parent if there are multiple elements to show.\r\n */\r\n\r\n.message {\r\n  margin-bottom: 1rem;\r\n  padding: 1rem;\r\n  color: #717171;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n\r\n/*\r\n * Container\r\n *\r\n * Center the page content.\r\n */\r\n\r\n.container {\r\n  max-width: 38rem;\r\n  padding-left:  1rem;\r\n  padding-right: 1rem;\r\n  margin-left:  auto;\r\n  margin-right: auto;\r\n}\r\n\r\n\r\n/*\r\n * Masthead\r\n *\r\n * Super small header above the content for site name and short description.\r\n */\r\n\r\n.masthead {\r\n  padding-top:    1rem;\r\n  padding-bottom: 1rem;\r\n  margin-bottom: 3rem;\r\n}\r\n.masthead-title {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  color: #505050;\r\n}\r\n.masthead-title a {\r\n  color: #505050;\r\n}\r\n.masthead-title small {\r\n  font-size: 75%;\r\n  font-weight: 400;\r\n  color: #c0c0c0;\r\n  letter-spacing: 0;\r\n}\r\n\r\n\r\n/*\r\n * Posts and pages\r\n *\r\n * Each post is wrapped in `.post` and is used on default and post layouts. Each\r\n * page is wrapped in `.page` and is only used on the page layout.\r\n */\r\n\r\n.page,\r\n.post {\r\n  margin-bottom: 4em;\r\n}\r\n\r\n/* Blog post or page title */\r\n.page-title,\r\n.post-title,\r\n.post-title a {\r\n  color: #303030;\r\n}\r\n.page-title,\r\n.post-title {\r\n  margin-top: 0;\r\n}\r\n\r\n/* Meta data line below post title */\r\n.post-date {\r\n  display: block;\r\n  margin-top: -.5rem;\r\n  margin-bottom: 1rem;\r\n  color: #9a9a9a;\r\n}\r\n\r\n/* Related posts */\r\n.related {\r\n  padding-top: 2rem;\r\n  padding-bottom: 2rem;\r\n  border-top: 1px solid #eee;\r\n}\r\n.related-posts {\r\n  padding-left: 0;\r\n  list-style: none;\r\n}\r\n.related-posts h3 {\r\n  margin-top: 0;\r\n}\r\n.related-posts li small {\r\n  font-size: 75%;\r\n  color: #999;\r\n}\r\n.related-posts li a:hover {\r\n  color: #268bd2;\r\n  text-decoration: none;\r\n}\r\n.related-posts li a:hover small {\r\n  color: inherit;\r\n}\r\n\r\n\r\n/*\r\n * Pagination\r\n *\r\n * Super lightweight (HTML-wise) blog pagination. `span`s are provide for when\r\n * there are no more previous or next posts to show.\r\n */\r\n\r\n.pagination {\r\n  overflow: hidden; /* clearfix */\r\n  margin-left: -1rem;\r\n  margin-right: -1rem;\r\n  font-family: \"PT Sans\", Helvetica, Arial, sans-serif;\r\n  color: #ccc;\r\n  text-align: center;\r\n}\r\n\r\n/* Pagination items can be `span`s or `a`s */\r\n.pagination-item {\r\n  display: block;\r\n  padding: 1rem;\r\n  border: 1px solid #eee;\r\n}\r\n.pagination-item:first-child {\r\n  margin-bottom: -1px;\r\n}\r\n\r\n/* Only provide a hover state for linked pagination items */\r\na.pagination-item:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n@media (min-width: 30em) {\r\n  .pagination {\r\n    margin: 3rem 0;\r\n  }\r\n  .pagination-item {\r\n    float: left;\r\n    width: 50%;\r\n  }\r\n  .pagination-item:first-child {\r\n    margin-bottom: 0;\r\n    border-top-left-radius:    4px;\r\n    border-bottom-left-radius: 4px;\r\n  }\r\n  .pagination-item:last-child {\r\n    margin-left: -1px;\r\n    border-top-right-radius:    4px;\r\n    border-bottom-right-radius: 4px;\r\n  }\r\n}\r\n",
		"/*\r\n * Wrapper\r\n *\r\n * The wrapper is used to position site content when the sidebar is toggled. We\r\n * use an outter wrap to position the sidebar without interferring with the\r\n * regular page content.\r\n */\r\n\r\n.wrap {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n\r\n/*\r\n * Container\r\n *\r\n * Center the page content.\r\n */\r\n\r\n.container {\r\n  max-width: 28rem;\r\n  a {\r\n    @if $theme-color != $default { color: $theme-color; }\r\n  }\r\n}\r\n@media (min-width: 38em) {\r\n  .container {\r\n    max-width: 32rem;\r\n    &.content {\r\n      padding-top: 6.5rem;\r\n    }\r\n  }\r\n}\r\n@media (min-width: 56em) {\r\n  .container {\r\n    max-width: 38rem;\r\n  }\r\n}\r\n\r\n",
		"@include selection {\r\n  background: $theme-color;\r\n  color: $white;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  overflow-x: hidden;\r\n}\r\n\r\nhtml {\r\n  font-family: $font-serif;\r\n  text-rendering: optimizeLegibility;\r\n\t-webkit-font-smoothing: antialiased;\r\n\t-moz-osx-font-smoothing: grayscale;\r\n  -webkit-text-size-adjust:100%;\r\n  -ms-text-size-adjust:100%;\r\n  text-rendering:optimizelegibility;\r\n}\r\n\r\nh1, h2, h3, h4, h5, h6 {\r\n  font-family: $font-sans;\r\n  font-weight: 400;\r\n  color: $title-color;\r\n  letter-spacing: -.025rem;\r\n}\r\n\r\ncode {\r\n  color: #666;\r\n}\r\n",
		".highlight .hll { background-color: #ffc; }\r\n.highlight .c { color: #999; } /* Comment */\r\n//.highlight .err { color: #a00; background-color: #faa } /* Error */\r\n.highlight .k { color: #069; } /* Keyword */\r\n.highlight .o { color: #555 } /* Operator */\r\n.highlight .cm { color: #09f; font-style: italic } /* Comment.Multiline */\r\n.highlight .cp { color: #099 } /* Comment.Preproc */\r\n.highlight .c1 { color: #999; } /* Comment.Single */\r\n.highlight .cs { color: #999; } /* Comment.Special */\r\n.highlight .gd { background-color: #fcc; border: 1px solid #c00 } /* Generic.Deleted */\r\n.highlight .ge { font-style: italic } /* Generic.Emph */\r\n.highlight .gr { color: #f00 } /* Generic.Error */\r\n.highlight .gh { color: #030; } /* Generic.Heading */\r\n.highlight .gi { background-color: #cfc; border: 1px solid #0c0 } /* Generic.Inserted */\r\n.highlight .go { color: #aaa } /* Generic.Output */\r\n.highlight .gp { color: #009; } /* Generic.Prompt */\r\n.highlight .gs { } /* Generic.Strong */\r\n.highlight .gu { color: #030; } /* Generic.Subheading */\r\n.highlight .gt { color: #9c6 } /* Generic.Traceback */\r\n.highlight .kc { color: #069; } /* Keyword.Constant */\r\n.highlight .kd { color: #069; } /* Keyword.Declaration */\r\n.highlight .kn { color: #069; } /* Keyword.Namespace */\r\n.highlight .kp { color: #069 } /* Keyword.Pseudo */\r\n.highlight .kr { color: #069; } /* Keyword.Reserved */\r\n.highlight .kt { color: #078; } /* Keyword.Type */\r\n.highlight .m { color: #f60 } /* Literal.Number */\r\n.highlight .s { color: #d44950 } /* Literal.String */\r\n.highlight .na { color: #4f9fcf } /* Name.Attribute */\r\n.highlight .nb { color: #366 } /* Name.Builtin */\r\n.highlight .nc { color: #0a8; } /* Name.Class */\r\n.highlight .no { color: #360 } /* Name.Constant */\r\n.highlight .nd { color: #99f } /* Name.Decorator */\r\n.highlight .ni { color: #999; } /* Name.Entity */\r\n.highlight .ne { color: #c00; } /* Name.Exception */\r\n.highlight .nf { color: #c0f } /* Name.Function */\r\n.highlight .nl { color: #99f } /* Name.Label */\r\n.highlight .nn { color: #0cf; } /* Name.Namespace */\r\n.highlight .nt { color: #2f6f9f; } /* Name.Tag */\r\n.highlight .nv { color: #033 } /* Name.Variable */\r\n.highlight .ow { color: #000; } /* Operator.Word */\r\n.highlight .w { color: #bbb } /* Text.Whitespace */\r\n.highlight .mf { color: #f60 } /* Literal.Number.Float */\r\n.highlight .mh { color: #f60 } /* Literal.Number.Hex */\r\n.highlight .mi { color: #f60 } /* Literal.Number.Integer */\r\n.highlight .mo { color: #f60 } /* Literal.Number.Oct */\r\n.highlight .sb { color: #c30 } /* Literal.String.Backtick */\r\n.highlight .sc { color: #c30 } /* Literal.String.Char */\r\n.highlight .sd { color: #c30; font-style: italic } /* Literal.String.Doc */\r\n.highlight .s2 { color: #c30 } /* Literal.String.Double */\r\n.highlight .se { color: #c30; } /* Literal.String.Escape */\r\n.highlight .sh { color: #c30 } /* Literal.String.Heredoc */\r\n.highlight .si { color: #a00 } /* Literal.String.Interpol */\r\n.highlight .sx { color: #c30 } /* Literal.String.Other */\r\n.highlight .sr { color: #3aa } /* Literal.String.Regex */\r\n.highlight .s1 { color: #c30 } /* Literal.String.Single */\r\n.highlight .ss { color: #fc3 } /* Literal.String.Symbol */\r\n.highlight .bp { color: #366 } /* Name.Builtin.Pseudo */\r\n.highlight .vc { color: #033 } /* Name.Variable.Class */\r\n.highlight .vg { color: #033 } /* Name.Variable.Global */\r\n.highlight .vi { color: #033 } /* Name.Variable.Instance */\r\n.highlight .il { color: #f60 } /* Literal.Number.Integer.Long */\r\n\r\n.css .o,\r\n.css .o + .nt,\r\n.css .nt + .nt { color: #999; }\r\n",
		"/*\r\n * Sidebar\r\n *\r\n * The sidebar is the drawer, the item we are toggling with our handy hamburger\r\n * button in the corner of the page.\r\n *\r\n * This particular sidebar implementation was inspired by Chris Coyier's\r\n * \"Offcanvas Menu with CSS Target\" article, and the checkbox variation from the\r\n * comments by a reader. It modifies both implementations to continue using the\r\n * checkbox (no change in URL means no polluted browser history), but this uses\r\n * `position` for the menu to avoid some potential content reflow issues.\r\n *\r\n * Source: http://css-tricks.com/off-canvas-menu-with-css-target/#comment-207504\r\n */\r\n\r\n/* Style and \"hide\" the sidebar */\r\n.sidebar {\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  width: 14rem;\r\n  visibility: hidden;\r\n  overflow-y: auto;\r\n  font-family: \"PT Sans\", Helvetica, Arial, sans-serif;\r\n  font-size: .875rem; /* 15px */\r\n  color: rgba(255,255,255,.6);\r\n  @include transition(all .3s ease-in-out);\r\n\r\n  @if $reverse-layout {\r\n    left: auto;\r\n    right: -14rem;\r\n  } @else {\r\n    left: -14rem;\r\n    right: auto;\r\n  }\r\n\r\n  @if $theme-color != $default {\r\n    background-color: $theme-color;\r\n  } @else {\r\n    background-color: darken($theme-color-dark, 10%);\r\n  }\r\n}\r\n@media (min-width: 30em) {\r\n  .sidebar {\r\n    font-size: .75rem; /* 14px */\r\n  }\r\n}\r\n\r\n/* Sidebar content */\r\n.sidebar a {\r\n  font-weight: normal;\r\n  color: $white;\r\n}\r\n.sidebar-item {\r\n  padding: 1rem;\r\n}\r\n.sidebar-item p:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n/* Sidebar nav */\r\n.sidebar-nav {\r\n  border-bottom: 1px solid rgba(255,255,255,.1);\r\n}\r\n.sidebar-nav-item {\r\n  display: block;\r\n  padding: .5rem 1rem;\r\n  border-top: 1px solid rgba(255,255,255,.1);\r\n}\r\n.sidebar-nav-item-sub {\r\n  &:before {\r\n    content: \"\";\r\n    padding-left: 1em;\r\n  }\r\n  font-size: 85%;\r\n  line-height: 85%;\r\n}\r\n.sidebar-nav-item.active,\r\na.sidebar-nav-item:hover,\r\na.sidebar-nav-item:focus {\r\n  text-decoration: none;\r\n  background-color: rgba(255,255,255,.1);\r\n  border-color: transparent;\r\n}\r\n\r\n@media (min-width: 48em) {\r\n  .sidebar-item {\r\n    padding: 1.5rem;\r\n  }\r\n  .sidebar-nav-item {\r\n    padding-left:  1.5rem;\r\n    padding-right: 1.5rem;\r\n  }\r\n}\r\n\r\n/* Hide the sidebar checkbox that we toggle with `.sidebar-toggle` */\r\n.sidebar-checkbox {\r\n  position: absolute;\r\n  opacity: 0;\r\n  @include prefixer(user-select, none, webkit moz spec);\r\n}\r\n\r\n/* Style the `label` that we use to target the `.sidebar-checkbox` */\r\n.sidebar-toggle {\r\n  position: absolute;\r\n  top:  .8rem;\r\n  @if $reverse-layout {\r\n    left: auto;\r\n    right: 1rem;\r\n  } @else {\r\n    left: 1rem;\r\n    right: auto;\r\n  }\r\n  display: block;\r\n  padding: .25rem .75rem;\r\n  color: $theme-color;\r\n  background-color: $white;\r\n  border-radius: .25rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar-toggle:before {\r\n  display: inline-block;\r\n  width: 1rem;\r\n  height: .75rem;\r\n  content: \"\";\r\n  @include background-image(linear-gradient(to bottom, $theme-color-dark, $theme-color-dark 20%, $white 20%, $white 40%, $theme-color-dark 40%, $theme-color-dark 60%, $white 60%, $white 80%, $theme-color-dark 80%, $theme-color-dark 100%));\r\n}\r\n\r\n.sidebar-toggle:active,\r\n#sidebar-checkbox:focus ~ .sidebar-toggle,\r\n#sidebar-checkbox:checked ~ .sidebar-toggle {\r\n  color: $white;\r\n  background-color: $theme-color;\r\n}\r\n\r\n.sidebar-toggle:active:before,\r\n#sidebar-checkbox:focus ~ .sidebar-toggle:before,\r\n#sidebar-checkbox:checked ~ .sidebar-toggle:before {\r\n  @include background-image(linear-gradient(to bottom, $white, $white 20%, $theme-color-dark 20%, $theme-color-dark 40%, $white 40%, $white 60%, $theme-color-dark 60%, $theme-color-dark 80%, $white 80%, $white 100%));\r\n}\r\n\r\n@media (min-width: 30.1em) {\r\n  .sidebar-toggle {\r\n    position: fixed;\r\n  }\r\n}\r\n\r\n@media print {\r\n  .sidebar-toggle {\r\n    display: none;\r\n  }\r\n}\r\n\r\n/* Slide effect\r\n *\r\n * Handle the sliding effects of the sidebar and content in one spot, seperate\r\n * from the default styles.\r\n *\r\n * As an a heads up, we don't use `transform: translate3d()` here because when\r\n * mixed with `position: fixed;` for the sidebar toggle, it creates a new\r\n * containing block. Put simply, the fixed sidebar toggle behaves like\r\n * `position: absolute;` when transformed.\r\n *\r\n * Read more about it at http://meyerweb.com/eric/thoughts/2011/09/12/.\r\n */\r\n\r\n.wrap,\r\n.sidebar,\r\n.sidebar-toggle {\r\n  @include prefixer(backface-visibility, hidden, webkit ms spec);\r\n}\r\n.wrap,\r\n.sidebar-toggle {\r\n  @include transition(transform .3s ease-in-out);\r\n}\r\n\r\n#sidebar-checkbox:checked + .sidebar {\r\n  z-index: 10;\r\n  visibility: visible;\r\n}\r\n\r\n#sidebar-checkbox:checked ~ .wrap {\r\n  @include transform(translateX(if($overlay-sidebar,0,if($reverse-layout, -14rem, 14rem))));\r\n}\r\n\r\n#sidebar-checkbox:checked ~ .sidebar {\r\n  @include transform(translateX(if($reverse-layout, -14rem, 14rem)));\r\n  @if $overlay-sidebar {\r\n    box-shadow: .25rem 0 .5rem rgba(0,0,0,.1);\r\n    @if $reverse-layout { box-shadow: -.25rem 0 .5rem rgba(0,0,0,.2); }\r\n  }\r\n}\r\n\r\n#sidebar-checkbox:checked ~ .sidebar-toggle {\r\n  @include transform(translateX(if($reverse-layout, -14rem, 14rem)));\r\n  @if $overlay-sidebar {\r\n    box-shadow: 0 0 0 .25rem $white;\r\n  }\r\n}\r\n\r\n.sidebar-personal-info {\r\n  .sidebar-personal-info-section {\r\n    &:not(:first-of-type) {\r\n      margin-top: .75rem;\r\n    }\r\n    line-height: 1rem;\r\n    a, strong {\r\n      color: $white;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n}\r\n",
		".hero {\r\n  text-align: center;\r\n  font-size: 0.75rem;\r\n  img {\r\n    height: 28rem;\r\n    width: auto;\r\n    display: inline;\r\n    margin-top: -1rem;\r\n  }\r\n}\r\n",
		".post {\r\n  margin-bottom: 4em;\r\n\r\n  h1, h2, h3, h4, h5, h6 {\r\n    font-weight: 700;\r\n  }\r\n\r\n  @media (min-width: 38rem) {\r\n    font-size: .8rem;\r\n\r\n    h1 { font-size: 1.6rem; }\r\n    h2 { \r\n      margin: 2em 0 1em 0;\r\n      font-size: 1.0rem; \r\n    }\r\n    h3, h4, h5, h6 {\r\n      margin: 2em 0 1em 0;\r\n      font-size: 0.8rem;\r\n    }\r\n  }\r\n\r\n  .post-title {\r\n    color: $theme-color;\r\n    margin-top: 0;\r\n  }\r\n\r\n  .post-date {\r\n    display: inline-block;\r\n    margin-top: -.5rem;\r\n    margin-bottom: 1rem;\r\n    color: $post-date-color;\r\n  }\r\n\r\n  .post-more {\r\n    margin-top: .5em;\r\n    text-align: right;\r\n    .fa{\r\n      margin-right: .2em;\r\n    }\r\n  }\r\n\r\n  article {\r\n    line-height: 1.4rem;\r\n  }\r\n}\r\n\r\n/* Related posts */\r\n.related {\r\n  padding-top: 2rem;\r\n  padding-bottom: 2rem;\r\n  border-top: 1px solid $lightgrey;\r\n}\r\n.related-posts {\r\n  padding-left: 0;\r\n  list-style: none;\r\n}\r\n.related-posts h3 {\r\n  margin-top: 0;\r\n}\r\n.related-posts li small {\r\n  font-size: 75%;\r\n  color: #999;\r\n}\r\n.related-posts li a:hover {\r\n  color: $theme-color;\r\n  text-decoration: none;\r\n}\r\n.related-posts li a:hover small {\r\n  color: inherit;\r\n}\r\n\r\n",
		".page {\r\n  margin-bottom: 4em;\r\n  .page-title {\r\n    color: $theme-color;\r\n    margin-top: 0;\r\n    text-transform: uppercase;\r\n  }\r\n}\r\n\r\n",
		".post-tag {\r\n  display: inline-block;\r\n  background: rgba($theme-color, 0.15);\r\n  padding: 0 .5rem;\r\n  margin-right: .5rem;\r\n  border-radius: 4px;\r\n  color: $theme-color;\r\n  font-family: $font-sans;\r\n  font-size: 90%;\r\n  &:before {\r\n    content: \"\\f02b\";\r\n    font-family: $font-font-awesome;\r\n    padding-right: .5em;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n    background: $theme-color;\r\n    color: $white;\r\n  }\r\n  @include transition(all .1s ease-in-out);\r\n}\r\n\r\n.tags-expo {\r\n  :target:before {\r\n    content:\"\";\r\n    display:block;\r\n    height:72px; /* fixed header height*/\r\n    margin:-72px 0 0; /* negative fixed header height */\r\n  }\r\n  .tags-expo-list {\r\n    @media (min-width: 38em) {\r\n      font-size: 0.9rem;\r\n      .post-tag {\r\n        margin: .2em .3em;\r\n      }\r\n    }\r\n  }\r\n  .tags-expo-section {\r\n    ul {\r\n      list-style-type: circle;\r\n      list-style-position: inside;\r\n      padding: 0;\r\n      li {\r\n        @include transition(all .1s ease-in-out);\r\n        padding: 0 1rem;\r\n        &:hover {\r\n          list-style-type: disc;\r\n          padding: 0 .5rem;\r\n        }\r\n      }\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n    }\r\n    .post-date {\r\n      display: inline-block;\r\n      font-size: 80%;\r\n      color: $post-date-color;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n    font-family: $font-sans;\r\n  }\r\n}\r\n\r\n",
		"/*\r\n * Masthead\r\n *\r\n * Super small header above the content for site name and short description.\r\n */\r\n\r\n.masthead {\r\n  padding-top:    1rem;\r\n  padding-bottom: 1rem;\r\n  margin-bottom: 3rem;\r\n  border-bottom: 1px solid $lightgrey;\r\n  background-color: rgba(255,255,255,0.75);\r\n  @media (min-width: 30rem) {\r\n    position: fixed;\r\n    width: 100%;\r\n  }\r\n  .masthead-title {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    color: $theme-color;\r\n    a {\r\n      color: $theme-color;\r\n      text-decoration: none;\r\n    }\r\n    small {\r\n      font-size: 75%;\r\n      font-weight: 400;\r\n      color: $masthead-title-small-color;\r\n      letter-spacing: 0;\r\n    }\r\n    @media (max-width: 48em) {\r\n      text-align: center;\r\n      small {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n  .masthead-logo {\r\n    height: 30px;\r\n    width: auto;\r\n    vertical-align: text-bottom;\r\n    display: inline;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n}\r\n",
		"/*\r\n * Pagination\r\n *\r\n * Super lightweight (HTML-wise) blog pagination. `span`s are provide for when\r\n * there are no more previous or next posts to show.\r\n */\r\n\r\n.pagination {\r\n  overflow: hidden; /* clearfix */\r\n  margin-left: -1rem;\r\n  margin-right: -1rem;\r\n  font-family: \"PT Sans\", Helvetica, Arial, sans-serif;\r\n  color: #ccc;\r\n  text-align: center;\r\n}\r\n\r\n/* Pagination items can be `span`s or `a`s */\r\n.pagination-item {\r\n  display: block;\r\n  padding: 1rem;\r\n  border: 1px solid $lightgrey;\r\n}\r\n.pagination-item:first-child {\r\n  margin-bottom: -1px;\r\n}\r\n\r\n/* Only provide a hover state for linked pagination items */\r\na.pagination-item:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n@media (min-width: 30em) {\r\n  .pagination {\r\n    margin: 3rem 0;\r\n  }\r\n  .pagination-item {\r\n    float: left;\r\n    width: 50%;\r\n  }\r\n  .pagination-item:first-child {\r\n    margin-bottom: 0;\r\n    border-top-left-radius:    4px;\r\n    border-bottom-left-radius: 4px;\r\n  }\r\n  .pagination-item:last-child {\r\n    margin-left: -1px;\r\n    border-top-right-radius:    4px;\r\n    border-bottom-right-radius: 4px;\r\n  }\r\n}\r\n"
	],
	"names": [],
	"mappings": "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"
}